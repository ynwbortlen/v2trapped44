local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "TRAPPED V2", HidePremium = false, IntroEnabled = false,IntroText = TRAPPEDV2, SaveConfig = true, ConfigFolder = "TRAPPEDV2"})


local Tab = Window:MakeTab({
	Name = "COMBAT",
	Icon = "rbxassetid://17893898542",
	PremiumOnly = false
})

OrionLib:MakeNotification({
	Name = "By OsDee",
	Content = "ARE YOU READYYY",
	Image = "rbxassetid://17893898542",
	Time = 5
})

Tab:AddButton({
	Name = "Blatant CamLock(Q)",
	Callback = function()
		getgenv().NemesisPreBeta = {
			["Settings"] = {
				Disabling = {Toggle = false, Keybind = "H"},
				UpdateTickDelay = 0.05
			},
			["Camlock"] = {
				Toggling = {
					Enable = true, 
					Keybind = "Q"
				},
				Settings = {
					Prediction = { 
						true, 
						999.999, 
						false, 
						.003
					},
					Smoothing = {
						smoothness = true, 
						x = 1, 
						y = 1
					},
					OffSets = {
						Jump = {
							Enable = false, 
							[1] = Vector3.new(0, 3, 0)
						}
					}
				},
				Conditions = {
					Player = {
						WallCheck = false, 
						Grabbed = false, 
						Knocked = false, 
						CrewID = false
					},
					BodyParts = {"HumanoidRootPart", "Head"}
				}
			},
			["Silent"] = {
				Toggling = { Enable = false },
				Settings = {
					Prediction = { true , 0.11934 , false, 0.003 },
					HitChance = 100,
					Resolver = true,
					OffSets = {
						Jump = {
							Enable = false, 
							[1] = Vector3.new(0, 0, 0)
						}
					}
				},
				Conditions = {
					Player = { WallCheck = false, Grabbed = false, Knocked = false, CrewID = false },
					BodyParts = {"HumanoidRootPart", "UpperTorso", "Head"}
				}
			},
			["Field Of View"] = {
				Enable = true, 
				Size = 200, 
				Color = Color3.fromRGB(255, 255, 255), 
			},
			["Miscs"] = {
				["Sorting"] = {
					Toggled = false,
					Key = "F",
					alphabetically = true,
					Ammo = false,
					Custom = {
						Enable = false,
						List = {[1] = "[Revolver]", [2] = "[Chicken]"} -- // etc
					}
				},
				["Animation"] = {
					Enable = true,
					Animations = {["Greet"] = {[1] = false, [2] = "V"}}
				}
			}
		}
		
		
		
		
		
		local DUpvalue, Round, V3, V2, CF, Rservice, UserInput, Ping, Mouse, backpack  = debug.getupvalue, math.round, Vector3.new, Vector2.new, CFrame.new, game:GetService("RunService"), game:GetService("UserInputService"), game:GetService("Stats").PerformanceStats.Ping, game:GetService("Players").LocalPlayer:GetMouse(), game:GetService("Players").LocalPlayer.Backpack
		local Players, Self, Character, Camera = game:GetService("Players"), game:GetService("Players").LocalPlayer, game:GetService("Players").LocalPlayer.Character or  game:GetService("Players").LocalPlayer.CharacterAdded:Wait(), game:GetService("Workspace").CurrentCamera
		local idx, endp
		
		
		local Storage = {
			Drawings = {},
			Connections = {},
			targets = {
				[1] = nil,
				[2] = nil
			},
			ValuePosition = nil,
			bodyparts = {
				[1] = "",
				[2] = ""
			},
			update_tick = tick(),
			etc = {
				Ctoggled = false,
				Mtoggled = false
			},
			items = {}
		}
		
		
		
		function NewConnection(type, callback)
			local connection = type:Connect(callback)
			Storage.Connections[#Storage.Connections+1] = connection
			return connection
		end
		
		function Chance(chance, maxchance)
			return math.random(maxchance) <= chance
		end
		
		
		function Thread(Function, ...)
			local co
			local success, result
		
			if Function ~= nil then
				co = coroutine.create(Function)
				success, result = coroutine.resume(co, ...)
			end
			if success ~= nil and co ~= nil and Function ~= nil then
				return result
			end
		end
		
		
		function wallcheck(origin)
			local parts = Camera:GetPartsObscuringTarget({origin.Position,  Character.HumanoidRootPart.Position}, {Camera, Character, origin.Parent})
			if #parts == 0 then
				return true
			end
			return false
		end
		
		function Grabbed(player)
			if player.Character ~= nil  then
				return not player.Character:FindFirstChild("GRABBING_CONSTRAINT")
			end
		end
		
		function Knocked(player)
			if player.Character ~= nil  then
				return player.Character.BodyEffects["K.O"].Value ~= true
			end
		end
		
		
		local pingHistory = {}
		local lastPingUpdateTime = tick()
		
		
		
		function GetPrediction()
			local currentPing = Ping:GetValue() * 0.003
			if getgenv().NemesisPreBeta.Camlock.Settings.Prediction[3] or getgenv().NemesisPreBeta.Silent.Settings.Prediction[3] then
				return currentPing
			else
				return getgenv().NemesisPreBeta.Camlock.Settings.Prediction[2] and getgenv().NemesisPreBeta.Silent.Settings.Prediction[2]
			end
		end
		
		function Crew(player)
			if game.Players.LocalPlayer:FindFirstChild("DataFolder"):FindFirstChild("Information"):FindFirstChild("Crew") then
				local SelfCrewValue =  game.Players.LocalPlayer:FindFirstChild("DataFolder"):FindFirstChild("Information"):FindFirstChild("Crew")
				if SelfCrewValue.Value ~= 0 then
					if player:FindFirstChild("DataFolder"):FindFirstChild("Information"):FindFirstChild("Crew")  then
						local Enimy = player:FindFirstChild("DataFolder"):FindFirstChild("Information"):FindFirstChild("Crew")
						if Enimy.Value == SelfCrewValue.Value then
							return false
						end
					end
				end
			end
			return true
		end
		
		
		
		function Closespart(player, hitboxes)
			local closestPart
			local closestDistanc = math.huge
			for _, hitbox in pairs(hitboxes) do
				local part = player.Character:FindFirstChild(hitbox)
				if part then
					local pos = Camera:WorldToViewportPoint(part.Position)
					local distance = (UserInput:GetMouseLocation() - V2(pos.X, pos.Y)).Magnitude
					if distance < closestDistanc then
						closestPart = part
						closestDistanc = distance
					end
				end
			end
			return closestPart
		end
		
		
		
		function isInCustomList(toolName)
			for _, customName in ipairs(getgenv().NemesisPreBeta.Miscs.Sorting.Custom.List) do
				if toolName == customName then
					return true
				end
			end
			return false
		end
		
		
		function GetClosest(table)
			local MaxDistance = getgenv().NemesisPreBeta["Field Of View"].Enable and getgenv().NemesisPreBeta["Field Of View"].Size or math.huge
			local Target
		
			for i,v in pairs(Players:GetPlayers()) do
				if v ~= Self and v.Character ~= nil and v.Character:FindFirstChild("HumanoidRootPart") and v.Character:FindFirstChild("Head") then
					local ViewPort, Visible = Camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
					local Mag = (UserInput:GetMouseLocation() - Vector2.new(ViewPort.X, ViewPort.Y)).Magnitude
					if MaxDistance > Mag and Visible and (
						(table.WallCheck and wallcheck(v.Character.HumanoidRootPart)) or true and
						(table.Grabbed and Grabbed(v)) or true and
						(table.Knocked and Knocked(v)) or true and
						(table.CrewID and Crew(v)) or true 
					) then
						MaxDistance = Mag
						Target = v
					end
				end
			end
			return Target
		end
		
		function Velocity(Target, method)
			if method == true then
				local pos = Target.Character.HumanoidRootPart.Position
				local lastTime = tick()
				local currentPos, currentTime
				local connection
				connection =
					game:GetService("RunService").Heartbeat:Connect(
					function()
						currentPos = Target.Character.HumanoidRootPart.Position
						currentTime = tick()
						connection:Disconnect()
					end
				)
				wait(0.01)
				local velocity = (currentPos - pos) / (currentTime - lastTime)
				return Vector3.new(math.floor(velocity.X), math.floor(velocity.Y), math.floor(velocity.Z))
			else
				return Target.character:FindFirstChild("HumanoidRootPart").AssemblyLinearVelocity
			end
		end
		
		function playAnimation(animationName)
			local args = {
				[1] = "AnimationPack",
				[2] = animationName,
			}
			game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
		end
		
		
		-- // updates
		
		function UpdateSilent()
			local SilentTable = getgenv().NemesisPreBeta.Silent
			if SilentTable.Toggling.Enable then
				Storage.targets[2] = GetClosest(SilentTable.Conditions.Player)
				if Storage.targets[2] ~= nil and Storage.targets[2].Character ~= nil and Storage.targets[2].Character:FindFirstChild("HumanoidRootPart") then
					Storage.bodyparts[2] =  tostring(Closespart(Storage.targets[2], SilentTable.Conditions.BodyParts))
					local position = Storage.targets[2].Character[Storage.bodyparts[2]].Position
					if SilentTable.Settings.OffSets.Jump.Enable and Storage.targets[2].Character:FindFirstChildOfClass("Humanoid"):GetState() == Enum.HumanoidStateType.Freefall then
						position = position + SilentTable.Settings.OffSets.Jump[1]
					end
					Storage.CFposition = position + (SilentTable.Settings.Prediction and Velocity(Storage.targets[2], SilentTable.Settings.Resolver) * GetPrediction() or 0)
				end
			end
		end
		
		
		function UpdateCamlock()
			local CamLockTable = getgenv().NemesisPreBeta.Camlock
			if Storage.etc.Ctoggled and CamLockTable.Toggling.Enable and Storage.targets[1] ~= nil and Storage.targets[1].Character ~= nil then
				local position = Storage.targets[1].Character[Storage.bodyparts[1]].Position
		
				if CamLockTable.Settings.OffSets.Jump.Enable and Storage.targets[1].Character:FindFirstChildOfClass("Humanoid"):GetState() == Enum.HumanoidStateType.Freefall then
					position = position + CamLockTable.Settings.OffSets.Jump[1]
				end
		
				if CamLockTable.Settings.Smoothing.enable then
					local goal = CFrame.new(Camera.CFrame.Position, position + (CamLockTable.Settings.Prediction[1] * GetPrediction() or Vector3.new()))
					Camera.CFrame = Camera.CFrame:Lerp(goal, CamLockTable.Settings.Smoothing.x, CamLockTable.Settings.Smoothing.y)
				else
					local prediction = CamLockTable.Settings.Prediction[1] and Storage.targets[1].Character.HumanoidRootPart.AssemblyLinearVelocity * GetPrediction() or Vector3.new()
					Camera.CFrame = CFrame.new(Camera.CFrame.Position, position + prediction)
				end
			end
		end
		
		do -- main connection
		
			NewConnection(UserInput.InputBegan, function(key, wtv)
				if key.KeyCode == Enum.KeyCode[getgenv().NemesisPreBeta.Camlock.Toggling.Keybind:upper()] and not wtv then
					if getgenv().NemesisPreBeta.Camlock.Toggling.Enable then
						Storage.etc.Ctoggled = not Storage.etc.Ctoggled
						Storage.targets[1] = GetClosest(getgenv().NemesisPreBeta.Camlock.Conditions.Player)
		
						if  Storage.targets[1] and  Storage.targets[1].Character then
							Storage.bodyparts[1] = tostring(Closespart(Storage.targets[1], getgenv().NemesisPreBeta.Camlock.Conditions.BodyParts))
		
						end
					else
						if  Storage.targets[1] ~= nil then
							Storage.targets[1] = nil
						end
					end
				end
			end)
		
			NewConnection(UserInput.InputBegan, function(key, wtv)
				if getgenv().NemesisPreBeta.Settings.Disabling.Toggle and key.KeyCode == Enum.KeyCode[getgenv().NemesisPreBeta.Settings.Disabling.Keybind:upper()]  and not wtv then
					for i,v in pairs(Storage.Connections) do
						if v then
							v:Disconnect()
						end
					end
					for i,v in pairs(Storage.Drawings) do
						if v and v.__OBJECT_EXISTS then
							print("f")
						end
					end
				end
			end)
		
			NewConnection(UserInput.InputBegan, function(key, wtv)
				if getgenv().NemesisPreBeta.Miscs.Sorting.Toggled and key.KeyCode == Enum.KeyCode[getgenv().NemesisPreBeta.Miscs.Sorting.Key:upper()] and not wtv then
					local items = {}
		
					if getgenv().NemesisPreBeta.Miscs.Sorting.Custom.Enable then
						for _, customName in ipairs(getgenv().NemesisPreBeta.Miscs.Sorting.Custom.List) do
							for _, item in pairs(backpack:GetChildren()) do
								if item:IsA("Tool") and item.Name == customName then
									table.insert(items, 1, item)
									break
								end
							end
						end
					end
					
					for _, item in pairs(backpack:GetChildren()) do
						if item:IsA("Tool") and (not getgenv().NemesisPreBeta.Miscs.Sorting.Custom.Enable or not isInCustomList(item.Name)) then
							table.insert(items, item)
						end
					end
					
					if getgenv().NemesisPreBeta.Miscs.Sorting.alphabetically and not getgenv().NemesisPreBeta.Miscs.Sorting.Custom.Enable then
						table.sort(items, function(a, b)
							return a.Name < b.Name
						end)
					end
					
					if getgenv().NemesisPreBeta.Miscs.Sorting.Ammo and not getgenv().NemesisPreBeta.Miscs.Sorting.Custom.Enable then
						table.sort(items, function(a, b)
							return a.Value > b.Value
						end)
					end
		
					for _, item in ipairs(items) do
						item.Parent = nil
						wait(0.01)
						item.Parent = backpack
					end
		
				end
			end)
		
			NewConnection(UserInput.InputBegan, function(key, wtv)
				if getgenv().NemesisPreBeta.Miscs.Animation.Enable and not wtv then
					for animationName, animationData in pairs(getgenv().NemesisPreBeta.Miscs.Animation.Animations) do
						if animationData[1] and key.KeyCode == Enum.KeyCode[animationData[2]] then
							playAnimation(animationName)
							break
						end
					end
				end
			end)
		
		
		
		
			NewConnection(Rservice.Heartbeat, function()
		
					--//  camlock
					Thread(UpdateCamlock())
		
					--// Silent UPDATE
					Thread(UpdateSilent())
		
			end)
		end
		
		
			for connection, index in next, getconnections(workspace.CurrentCamera.Changed) do
				index:Disable()
			end
			for connection, index in next, getconnections(workspace.CurrentCamera:GetPropertyChangedSignal("CFrame")) do
				index:Disable()
			end
		
		
		local oldIndex
		oldIndex = hookmetamethod(game, "__index", function(t, k)
			if t:IsA("Mouse") and k == "Hit" or k == "Target" then
				if  getgenv().NemesisPreBeta.Silent.Toggling.Enable and Chance(getgenv().NemesisPreBeta.Silent.Settings.HitChance, 100) and Storage.targets[2] ~= nil then
					local Hit = CFrame.new(Storage.CFposition)
					return (k == "Hit" and Hit)
				end
			end
			return oldIndex(t, k)
		end)
  	end    
})

Tab:AddButton({
	Name = "No Recoil",
	Callback = function()
      		-- have fun
			  function isframework(scriptInstance)
				if tostring(scriptInstance) == "Framework" then
					return true
				end
				return false
			end
			
			function checkArgs(instance,index)
				if tostring(instance):lower():find("camera") and tostring(index) == "CFrame" then
					return true
				end
				return false
			end
			
			newindex = hookmetamethod(game, "__newindex", function(self,index,value)
				local callingScr = getcallingscript()
			
				if isframework(callingScr) and checkArgs(self,index) then
				   return;
				end
			
				return newindex(self,index,value)
			end)
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Auto Reload",
	Callback = function()
		_G.AutoReload = true -- change to false if u don't want it anymore.

while _G.AutoReload == true and game:GetService("RunService").Heartbeat:Wait() do
if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool") then
            if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool"):FindFirstChild("Ammo") then
                if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool"):FindFirstChild("Ammo").Value <= 0 then
                    game:GetService("ReplicatedStorage").MainEvent:FireServer("Reload", game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool")) 
                    wait(1)
                end
            end
        end
end
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Trash Talk(J)",
	Callback = function()
		local words = {
			'ur bad',
			'im not locking ur just bad',
			'clown',
			'sonned',
			'how did u miss that many shots',
			"TRAPPED ON TOP"
	}
	
	
	local player = game.Players.LocalPlayer
	local keybind = 'j' -- keybind here 
	
	local event = game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest
	
	player:GetMouse().KeyDown:connect(function(key)
		if key == keybind then
			event:FireServer(words[math.random(#words)], "All")
		 end
	end)
  	end    
})




Tab:AddButton({
	Name = "Anti Fling",
	Callback = function()
		local localPlayer = game:GetService('Players').LocalPlayer;
                local localCharacter = localPlayer.Character;
                localCharacter:FindFirstChildOfClass('Humanoid').Health = 0;
                local newCharacter = localPlayer.CharacterAdded:Wait();
                local spoofFolder = Instance.new('Folder');
                spoofFolder.Name = 'FULLY_LOADED_CHAR';
                spoofFolder.Parent = newCharacter;
                newCharacter:WaitForChild('RagdollConstraints'):Destroy();
                local spoofValue = Instance.new('BoolValue', newCharacter);
                spoofValue.Name = 'RagdollConstraints';
                local name = game.Players.LocalPlayer.Name
                local lol =    game.Workspace:WaitForChild(name)
                local money = Instance.new("Folder",game.Players.LocalPlayer.Character);money.Name = "FULLY_LOADED_CHAR"
                lol.Parent = game.Workspace.Players
                game.Players.LocalPlayer.Character:WaitForChild("BodyEffects")
                game.Players.LocalPlayer.Character.BodyEffects.BreakingParts:Destroy()
  	end    
})

Tab:AddButton({
	Name = "Low GFX",
	Callback = function()
		for _,v in pairs(workspace:GetDescendants()) do
			if v.ClassName == "Part" or v.ClassName == "SpawnLocation" or v.ClassName == "WedgePart" or v.ClassName == "Terrain" or v.ClassName == "MeshPart" then
			   v.Material = "Plastic"
			end
		 end
  	end    
})

Tab:AddButton({
	Name = "SKY AA",
	Callback = function()
		getgenv().Sky = true 
getgenv().SkyAmount = 90

game:GetService("RunService").heartbeat:Connect(function()
    if getgenv().Sky ~= false then 
    local vel = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
    game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0,      getgenv().SkyAmount,0) 
    game:GetService("RunService").RenderStepped:Wait()
    game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = vel
    end 
end)
  	end   
})


Tab:AddButton({
	Name = "FLY(X)",
	Callback = function()
		local plr = game.Players.LocalPlayer
        local mouse = plr:GetMouse()
 
        localplayer = plr
 
        if workspace:FindFirstChild("Core") then
        workspace.Core:Destroy()
        end
 
        local Core = Instance.new("Part")
        Core.Name = "Core"
        Core.Size = Vector3.new(0.05, 0.05, 0.05)
 
        spawn(function()
        Core.Parent = workspace
        local Weld = Instance.new("Weld", Core)
        Weld.Part0 = Core
        Weld.Part1 = localplayer.Character.LowerTorso
        Weld.C0 = CFrame.new(0, 0, 0)
        end)
 
        workspace:WaitForChild("Core")
 
        local torso = workspace.Core
        flying = true
        local speed=10
        local keys={a=false,d=false,w=false,s=false}
        local e1
        local e2
        local function start()
        local pos = Instance.new("BodyPosition",torso)
        local gyro = Instance.new("BodyGyro",torso)
        pos.Name="EPIXPOS"
        pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
        pos.position = torso.Position
        gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        gyro.cframe = torso.CFrame
        repeat
        wait()
        localplayer.Character.Humanoid.PlatformStand=true
        local new=gyro.cframe - gyro.cframe.p + pos.position
        if not keys.w and not keys.s and not keys.a and not keys.d then
        speed=5
        end
        if keys.w then
        new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
        speed=speed+0
        end
        if keys.s then
        new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
        speed=speed+0
        end
        if keys.d then
        new = new * CFrame.new(speed,0,0)
        speed=speed+0
        end
        if keys.a then
        new = new * CFrame.new(-speed,0,0)
        speed=speed+0
        end
        if speed>10 then
        speed=5
        end
        pos.position=new.p
        if keys.w then
        gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(-math.rad(speed*0),0,0)
        elseif keys.s then
        gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(math.rad(speed*0),0,0)
        else
        gyro.cframe = workspace.CurrentCamera.CoordinateFrame
        end
        until flying == false
        if gyro then gyro:Destroy() end
        if pos then pos:Destroy() end
        flying=false
        localplayer.Character.Humanoid.PlatformStand=false
        speed=10
        end
        e1=mouse.KeyDown:connect(function(key)
        if not torso or not torso.Parent then flying=false e1:disconnect() e2:disconnect() return end
        if key=="w" then
        keys.w=true
        elseif key=="s" then
        keys.s=true
        elseif key=="a" then
        keys.a=true
        elseif key=="d" then
        keys.d=true
        elseif key=="x" then
        if flying==true then
        flying=false
        else
        flying=true
        start()
        end
        end
        end)
        e2=mouse.KeyUp:connect(function(key)
        if key=="w" then
        keys.w=false
        elseif key=="s" then
        keys.s=false
        elseif key=="a" then
        keys.a=false
        elseif key=="d" then
        keys.d=false
        end
        end)
        start()
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]



Tab:AddButton({
	Name = "Resolver",
	Callback = function()
		-- // aiming version!
local CPlayer = Aiming.Selected
local hrp = CPlayer.Character.HumanoidRootPart
                hrp.Velocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Y, hrp.Velocity.Z)    
                hrp.AssemblyLinearVelocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Y, hrp.Velocity.Z)
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Auto Block",
	Callback = function()
      		--[[
 
 
 
 
]]--
 
 
MainEvent = game:GetService('ReplicatedStorage').MainEvent
player = game.Players.LocalPlayer;
Distancia = 15; -- Here put the distance to activate
 
game:GetService('RunService'):BindToRenderStep("Auto-Block", 0 , function()
 
    local forbidden = {'[Popcorn]','[HotDog]','[GrenadeLauncher]','[RPG]','[SMG]','[TacticalShotgun]','[AK47]','[AUG]','[Glock]', '[Shotgun]','[Flamethrower]','[Silencer]','[AR]','[Revolver]','[SilencerAR]','[LMG]','[P90]','[DrumGun]','[Double-Barrel SG]','[Hamburger]','[Chicken]','[Pizza]','[Cranberry]','[Donut]','[Taco]','[Starblox Latte]','[BrownBag]','[Weights]','[HeavyWeights]'}
local Found = false
for _,v in pairs(game.Workspace.Players:GetChildren()) do
    if (v.UpperTorso.Position - player.Character.HumanoidRootPart.Position).Magnitude <= Distancia then
        if v.BodyEffects.Attacking.Value == true and not table.find(forbidden, v:FindFirstChildWhichIsA('Tool').Name ) and v.Name ~= player.Name then
            Found = true
            MainEvent:FireServer('Block', player.Name)
 
        end
    end
end
if Found == false then
    if player.Character.BodyEffects:FindFirstChild('Block') then player.Character.BodyEffects.Block:Destroy() end
    end
end)
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "CFRAME",
	Callback = function()
		local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
		local Window = Library.CreateLib("Speed", "DarkTheme")
		local speed = Window:NewTab("Speed")
		local rs = speed:NewSection("CFrame Speed")
		rs:NewButton("CFrame Guns FIX", "ButtonInfo", function()
			for _, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
				if v:IsA("Script") and v.Name ~= "Health" and v.Name ~= "Sound" and v:FindFirstChild("LocalScript") then
					v:Destroy()
				end
			end
			game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
				repeat
					wait()
				until game.Players.LocalPlayer.Character
				char.ChildAdded:Connect(function(child)
					if child:IsA("Script") then 
						wait(0.1)
						if child:FindFirstChild("LocalScript") then
							child.LocalScript:FireServer()
						end
					end
				end)
			end)
		end)
		rs:NewButton("CFrame Speed (Z)", "ButtonInfo", function()
				repeat
				wait()
			until game:IsLoaded()
			local L_134_ = game:service('Players')
			local L_135_ = L_134_.LocalPlayer
			repeat
				wait()
			until L_135_.Character
			local L_136_ = game:service('UserInputService')
			local L_137_ = game:service('RunService')
			getgenv().Multiplier = 0.5
			local L_138_ = true
			local L_139_
			L_136_.InputBegan:connect(function(L_140_arg0)
				if L_140_arg0.KeyCode == Enum.KeyCode.LeftBracket then
					Multiplier = Multiplier + 0.01
					print(Multiplier)
					wait(0.2)
					while L_136_:IsKeyDown(Enum.KeyCode.LeftBracket) do
						wait()
						Multiplier = Multiplier + 0.01
						print(Multiplier)
					end
				end
				if L_140_arg0.KeyCode == Enum.KeyCode.RightBracket then
					Multiplier = Multiplier - 0.01
					print(Multiplier)
					wait(0.2)
					while L_136_:IsKeyDown(Enum.KeyCode.RightBracket) do
						wait()
						Multiplier = Multiplier - 0.01
						print(Multiplier)
					end
				end
				if L_140_arg0.KeyCode == Enum.KeyCode.Z then
					L_138_ = not L_138_
					if L_138_ == true then
						repeat
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.Humanoid.MoveDirection * Multiplier
							game:GetService("RunService").Stepped:wait()
						until L_138_ == false
					end
				end
			end)
		end)
		rs:NewSlider("CFrame Speed ", "SliderInfo", 5, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)
			getgenv().Multiplier = s
		end)
		rs:NewKeybind("Toggle UI", "KeybindInfo", Enum.KeyCode.V, function()
			Library.ToggleUI()
		end)	
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Chat Spy",
	Callback = function()
      		-- // Initialise
--if (getgenv().ChatSpy) then return getgenv().ChatSpy; end;
repeat wait() until game:GetService("ContentProvider").RequestQueueSize == 0;
repeat wait() until game:IsLoaded();
 
-- // Vars
local Players = game:GetService("Players");
local StarterGui = game:GetService("StarterGui");
local ReplicatedStorage = game:GetService("ReplicatedStorage");
local LocalPlayer = Players.LocalPlayer;
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui");
local DefaultChatSystemChatEvents = ReplicatedStorage:WaitForChild("DefaultChatSystemChatEvents");
local SayMessageRequest = DefaultChatSystemChatEvents:WaitForChild("SayMessageRequest");
local OnMessageDoneFiltering = DefaultChatSystemChatEvents:WaitForChild("OnMessageDoneFiltering");
getgenv().ChatSpy = {
    Enabled = true,
    SpyOnSelf = false,
    Public = false,
    Chat = {
        Colour  = Color3.fromRGB(255, 0, 0),
        Font = Enum.Font.SourceSans,
        TextSize = 18,
        Text = "",
    },
    IgnoreList = {
        {Message = ":part/1/1/1", ExactMatch = true},
        {Message = ":part/10/10/10", ExactMatch = true},
        {Message = "A?????????", ExactMatch = false},
        {Message = ":colorshifttop 10000 0 0", ExactMatch = true},
        {Message = ":colorshiftbottom 10000 0 0", ExactMatch = true},
        {Message = ":colorshifttop 0 10000 0", ExactMatch = true},
        {Message = ":colorshiftbottom 0 10000 0", ExactMatch = true},
        {Message = ":colorshifttop 0 0 10000", ExactMatch = true},
        {Message = ":colorshiftbottom 0 0 10000", ExactMatch = true},
    },
};
 
-- // Function
function ChatSpy.checkIgnored(message)
    for i = 1, #ChatSpy.IgnoreList do
        local v = ChatSpy.IgnoreList[i];
        if (v.ExactMatch and message == v.Message) or (not v.ExactMatch and string.match(v.Message, message)) then 
            return true;
        end;
    end;
    return false;
end;
 
function ChatSpy.onChatted(targetPlayer, message)
    if (targetPlayer == LocalPlayer and string.lower(message):sub(1, 4) == "/spy") then
        ChatSpy.Enabled = not ChatSpy.Enabled; wait(0.3);
        ChatSpy.Chat.Text = "[SPY] - "..(ChatSpy.Enabled and "Enabled." or "Disabled.");
 
        StarterGui:SetCore("ChatMakeSystemMessage", ChatSpy.Chat);
    elseif (ChatSpy.Enabled and (ChatSpy.SpyOnSelf or targetPlayer ~= LocalPlayer)) then
        local message = message:gsub("[\n\r]",''):gsub("\t",' '):gsub("[ ]+",' ');
 
        local Hidden = true;
        local Connection = OnMessageDoneFiltering.OnClientEvent:Connect(function(packet, channel)
            if (packet.SpeakerUserId == targetPlayer.UserId and packet.Message == message:sub(#message - #packet.Message + 1) and (channel == "All" or (channel == "Team" and not ChatSpy.Public and Players[packet.FromSpeaker].Team == LocalPlayer.Team))) then
                Hidden = false;
            end;
        end);
 
        wait(1);
        Connection:Disconnect();
 
        if (Hidden and ChatSpy.Enabled and not ChatSpy.checkIgnored(message)) then
            if (#message > 1200) then
                message = message:sub(1200) .. "...";
            end;
            ChatSpy.Chat.Text = "[SPY] - ["..targetPlayer.Name.."]: " .. message;
            if (ChatSpy.Public) then SayMessageRequest:FireServer(ChatSpy.Chat.Text, "All"); else StarterGui:SetCore("ChatMakeSystemMessage", ChatSpy.Chat); end;
        end;
    end;
end;
 
-- // Handling Chats
local AllPlayers = Players:GetPlayers();
for i = 1, #AllPlayers do
    local player = AllPlayers[i];
    player.Chatted:Connect(function(message)
        ChatSpy.onChatted(player, message);
    end);
end;
 
Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        ChatSpy.onChatted(player, message);
    end);
end);
 
-- // Initialise Text
ChatSpy.Chat.Text = "[SPY] - "..(ChatSpy.Enabled and "Enabled." or "Disabled.");
StarterGui:SetCore("ChatMakeSystemMessage", ChatSpy.Chat);
 
-- // Update Chat Frame
local chatFrame = LocalPlayer.PlayerGui.Chat.Frame;
chatFrame.ChatChannelParentFrame.Visible = true;
chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position + UDim2.new(UDim.new(), chatFrame.ChatChannelParentFrame.Size.Y);
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "UnderGround AA",
	Callback = function()
		getgenv().bot = true 
        getgenv().emt = -100
 
        game:GetService("RunService").heartbeat:Connect(function()
        if getgenv().bot ~= false then
        local antiurmum = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
        game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, getgenv().emt, 0)
            game:GetService("RunService").RenderStepped:Wait()
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = antiurmum
        end
        end)   
  	end    
})



local XTab = Window:MakeTab({
	Name = "Extra Stuff",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

XTab:AddButton({
	Name = "DH SKIN CHANGER",
	Callback = function()
		local InventoryChanger = { Functions = {}, Selected = {}, Skins = {}, Owned = {} };

		do
			local Utilities = {};
		
			function cout(watermark, message)
				if not LPH_OBFUSCATED then
					return print('['..watermark..']', message);
				end;
			end;
		
			cout('Inventory Changer', 'Executor initialization test message')
		
			if not getgenv().InventoryConnections then
				getgenv().InventoryConnections = {};
			end;
		
			local players = game:GetService('Players');
			local client = players.LocalPlayer;
		
			local tween_service = game:GetService('TweenService');
		
			Utilities.AddConnection = function(signal, func)
				local connect = signal:Connect(func);
		
				table.insert(getgenv().InventoryConnections, { signal = signal, func = func, connect = connect });
				return connect;
			end;
		
			Utilities.Unload = function()
				for _, tbl in ipairs(getgenv().InventoryConnections) do
					if type(tbl) ~= 'table' then 
						tbl:Disconnect();
					end
				end;
		
				getgenv().InventoryConnections = {};
			end;
		
			Utilities.Unload();
		
			Utilities.Tween = function(args)
				local obj = args.obj or args.object;
				local prop = args.prop or args.properties;
				local duration = args.duration or args.time;
				local info = args.info or args.tween_info;
				local callback = args.callback;
		
				local tween = tween_service:Create(obj, duration and TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out) or info and TweenInfo.new(unpack(info)), prop);
				tween:Play();
		
				if callback then
					tween.Completed:Connect(callback);
				end;
			end;
		
			repeat task.wait() until client.Character:FindFirstChild('FULLY_LOADED_CHAR');
		
			local player_gui = client.PlayerGui;
		
			local main_gui = player_gui:WaitForChild('MainScreenGui');
			local crew = main_gui:WaitForChild('Crew');
			local bottom_left = crew:WaitForChild('BottomLeft').Frame;
			local skins_button = bottom_left:WaitForChild('Skins');
		
			local replicated_storage = game:GetService('ReplicatedStorage');
			local skin_modules = replicated_storage:WaitForChild('SkinModules');
			local meshes = skin_modules:WaitForChild('Meshes');
		
			local weapon_skins_gui = main_gui:WaitForChild('WeaponSkinsGUI');
			local gui_body_wrapper = weapon_skins_gui:WaitForChild('Body');
			local body_wrapper = gui_body_wrapper:WaitForChild('Wrapper');
			local skin_view = body_wrapper:WaitForChild('SkinView');
			local skin_view_frame = skin_view:WaitForChild('Frame');
		
			local guns = skin_view_frame:WaitForChild('Guns').Contents;
			local entries = skin_view_frame:WaitForChild('Skins').Contents.Entries;
		
			local Ignored = workspace.Ignored;
			local Siren = Ignored.Siren;
			local Radius = Siren.Radius;
		
			local regex = '%[(.-)%]';
		
			local newColorSequence = ColorSequence.new;
			local Color3fromRGB = Color3.fromRGB;
			local newCFrame = CFrame.new;
			local newColorSequenceKeypoint = ColorSequenceKeypoint.new;
		
			InventoryChanger.Skins = {
				['Mystical'] = {
					tween_duration = 0.65,
					beam_width = 0.125,
					color = newColorSequence(Color3fromRGB(255, 39, 24)),
					guns = {
						['[Revolver]'] = {
							location = meshes.Mystical.Revolver,
							equipped = false,
							shoot_sound = 'rbxassetid://14489866118',
							C0 = newCFrame(-0.015838623, -0.0802496076, 0.00772094727, 1, 0, 4.37113883e-08, 0, 1, 0, -4.37113883e-08, 0, 1)
						}
					}
				},
				['CyanPack'] = {
					mesh_location = meshes.CyanPack,
					guns = {
						['[TacticalShotgun]'] = {
							location = meshes.CyanPack.Cloud,
							equipped = false,
							shoot_sound = 'rbxassetid://14056055126',
							C0 = newCFrame(0.0441589355, -0.0269355774, -0.000701904297, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[Double-Barrel SG]'] = {
							location = meshes.CyanPack.DB,
							equipped = false,
							shoot_sound = 'rbxassetid://14056053588',
							C0 = newCFrame(-0.00828552246, 0.417651355, -0.00537109375, 4.18358377e-06, -1.62920685e-07, 1, 3.4104116e-13, 1, 1.62920685e-07, -1, 3.41041052e-13, -4.18358377e-06)
						},
						['[Revolver]'] = {
							location = meshes.CyanPack.Devil,
							equipped = false,
							shoot_sound = 'rbxassetid://14056056444',
							C0 = newCFrame(0.0185699463, 0.293397784, -0.00256347656, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						}
					}
				},
				['Cartoon'] = {
					guns = {
						['[Flamethrower]'] = {
							location = meshes.Cartoon.CartoonFT,
							equipped = false,
							C0 = newCFrame(-0.272186279, 0.197086751, 0.0440063477, -1, 4.8018768e-07, 8.7078952e-08, 4.80187623e-07, 1, -3.54779985e-07, -8.70791226e-08, -3.54779957e-07, -1)
						},
						['[Revolver]'] = {
							location = meshes.Cartoon.CartoonRev,
							equipped = false,
							shoot_sound = 'rbxassetid://14221101923',
							C0 = newCFrame(-0.015411377, 0.0135096312, 0.00338745117, 1.00000095, 3.41326549e-13, 2.84217399e-14, 3.41326549e-13, 1.00000191, -9.89490712e-10, 2.84217399e-14, -9.89490712e-10, 1.00000191)
						},
						['[Double-Barrel SG]'] = {
							location = meshes.Cartoon.DBCartoon,
							equipped = false,
							shoot_sound = 'rbxassetid://14220912852',
							C0 = newCFrame(0.00927734375, -0.00691050291, 0.000732421875, -1, -2.79396772e-08, -9.31322797e-10, -2.79396772e-08, 1, 1.42607872e-08, 9.31322575e-10, 1.42607872e-08, -1)
						},
						['[RPG]'] = {
							location = meshes.Cartoon.RPGCartoon,
							equipped = false,
							C0 = newCFrame(-0.0201721191, 0.289476752, -0.0727844238, 4.37113883e-08, 6.58276836e-37, 1, -5.72632016e-14, 1, 2.50305399e-21, -1, 5.72632016e-14, 4.37113883e-08)
						},
					}
				},
				['Dragon'] = {
					color = newColorSequence(Color3.new(1, 0, 0)),
					guns = {
						['[Revolver]'] = {
							location = meshes.Dragon.DragonRev,
							equipped = false,
							C0 = newCFrame(0.0384216309, 0.0450432301, -0.000671386719, 1.87045402e-31, 4.21188801e-16, -0.99999994, 1.77635684e-15, 1, -4.21188827e-16, 1, 1.77635684e-15, -1.87045413e-31)
						},
						['[Double-Barrel SG]'] = {
							location = meshes.Dragon.DBDragon,
							equipped = false,
							C0 = newCFrame(-0.123794556, 0.0481165648, 0.00048828125, 7.14693442e-07, 3.13283705e-10, 1, -4.56658222e-09, 1, -3.13281678e-10, -1, -4.56658533e-09, 7.14693442e-07)
						}
					}
				},
				['Tact'] = {
					tween_duration = 1.25,
					beam_width = 0.125,
					color = newColorSequence(Color3.new(1, 0.3725490196, 0.3725490196)),
					guns = {
						['[Revolver]'] = {
							location = meshes.Tact.Rev,
							equipped = false,
							shoot_sound = 'rbxassetid://13850086195',
							C0 = newCFrame(-0.318634033, -0.055095911, 0.00491333008, 0, 0, 1, 0, 1, 0, -1, 0, 0)
						},
						['[Double-Barrel SG]'] = {
							location = meshes.Tact.DB,
							equipped = false,
							C0 = newCFrame(-0.0701141357, -0.0506889224, -0.0826416016, 0, 0, 1, 0, 1, 0, -1, 0, 0)
						},
						['[TacticalShotgun]'] = {
							location = meshes.Tact.Tact,
							equipped = false,
							C0 = newCFrame(-0.0687713623, -0.0684046745, 0.12701416, 0, 0, 1, 0, 1, 0, -1, 0, 0)
						},
						['[SMG]'] = {
							location = meshes.Tact.Uzi,
							equipped = false,
							C0 = newCFrame(0.0408782959, 0.0827783346, -0.0423583984, -1, 0, 0, 0, 1, 0, 0, 0, -1)
						},
						['[Shotgun]'] = {
							location = meshes.Tact.Shotgun,
							equipped = false,
							C0 = newCFrame(-0.0610046387, 0.171100497, -0.00495910645, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[Silencer]'] = {
							location = meshes.Tact.Silencer,
							equipped = false,
							C0 = newCFrame(0.0766601562, -0.0350288749, -0.648864746, 1, 0, -4.37113883e-08, 0, 1, 0, 4.37113883e-08, 0, 1)
						}
					}
				},
				['Shadow'] = {
					color = newColorSequence(Color3.new(0.560784, 0.470588, 1), Color3.new(0.576471, 0.380392, 1)),
					guns = {
						['[Revolver]'] = {
							location = meshes.Shadow.RevolverGhost,
							equipped = false,
							C0 = newCFrame(1.52587891e-05, 0, 0, 1, 0, 8.74227766e-08, 0, 1, 0, -8.74227766e-08, 0, 1)
						},
						['[Double-Barrel SG]'] = {
							location = meshes.Shadow.DoubleBGhost,
							equipped = false,
							C0 = newCFrame(0.0250015259, -0.077037394, 0, 1, 0, 0, 0, 0.999998331, 0, 0, 0, 1)
						},
						['[AK47]'] = {
							location = meshes.Shadow.AK47Ghost,
							equipped = false,
							C0 = newCFrame(-0.750015259, 4.76837158e-07, -3.05175781e-05, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[SilencerAR]'] = {
							location = meshes.Shadow.ARGhost,
							equipped = false,
							C0 = newCFrame(0.116256714, 0.0750004649, 6.10351562e-05, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[AUG]'] = {
							location = meshes.Shadow.AUGGhost,
							equipped = false,
							C0 = newCFrame(-7.62939453e-06, 0.0499991775, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[DrumGun]'] = {
							location = meshes.Shadow.DrumgunGhost,
							equipped = false,
							C0 = newCFrame(1.14440918e-05, 0, 0, 1, 0, 8.74227766e-08, 0, 1, 0, -8.74227766e-08, 0, 1)
						},
						['[Flamethrower]'] = {
							location = meshes.Shadow.FlamethrowerGhost,
							equipped = false,
							C0 = newCFrame(-0.219947815, 0.339559376, 0.000274658203, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[Glock]'] = {
							location = meshes.Shadow.GlockGhost,
							equipped = false,
							C0 = newCFrame(0, 0, -0.200004578, 1, 0, 4.37113883e-08, 0, 1, 0, -4.37113883e-08, 0, 1)
						},
						['[LMG]'] = {
							location = meshes.Shadow.LMGGhost,
							equipped = false,
							C0 = newCFrame(0.374502182, -0.25, -0.25, -1, 0, -1.31134158e-07, 0, 1, 0, 1.31134158e-07, 0, -1)
						},
						['[P90]'] = {
							location = meshes.Shadow.P90Ghost,
							equipped = false,
							C0 = newCFrame(6.86645508e-05, 0.000218153, 3.05175781e-05, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[RPG]'] = {
							location = meshes.Shadow.RPGGhost,
							equipped = false,
							C0 = newCFrame(0.000122070312, 0.0625389814, 0.00672149658, 1, 0, -8.74227766e-08, 5.00610797e-21, 1, 5.72632016e-14, 8.74227766e-08, 5.72632016e-14, 1)
						},
						['[Rifle]'] = {
							location = meshes.Shadow.RifleGhost,
							equipped = false,
							C0 = newCFrame(0.000244140625, -0.100267321, -9.15527344e-05, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[SMG]'] = {
							location = meshes.Shadow.SMGGhost,
							equipped = false,
							C0 = newCFrame(-1.14440918e-05, 1.78813934e-07, -0.0263671875, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[Shotgun]'] = {
							location = meshes.Shadow.ShotgunGhost,
							equipped = false,
							C0 = newCFrame(3.05175781e-05, 0.199999928, 3.81469727e-06, -1, 0, -4.37113883e-08, 0, 1, 0, 4.37113883e-08, 0, -1)
						},
						['[TacticalShotgun]'] = {
							location = meshes.Shadow.TacticalShotgunGhost,
							equipped = false,
							C0 = newCFrame(-0.148262024, 0, 0, 1, 0, 8.74227766e-08, 0, 1, 0, -8.74227766e-08, 0, 1)
						}
					}
				},
				['Golden Age'] = {
					tween_duration = 1.25,
					beam_width = 0.125,
					color = newColorSequence(Color3.fromHSV(0.89166666666, 0.24, 1)),
					guns = {
						['[Revolver]'] = {
							location = meshes.GoldenAge.Revolver,
							equipped = false,
							C0 = newCFrame(0.0295257568, 0.0725820661, -0.000946044922, 1, -4.89858741e-16, -7.98081238e-23, 4.89858741e-16, 1, 3.2584137e-07, -7.98081238e-23, -3.2584137e-07, 1),
							shoot_sound = 'rbxassetid://1898322396'
						},
						['[Double-Barrel SG]'] = {
							location = meshes.GoldenAge['Double Barrel'],
							equipped = false,
							shoot_sound = 'rbxassetid://4915503055',
							C0 = newCFrame(-0.00664520264, 0.0538104773, 0.0124816895, -1, 4.89858741e-16, 7.98081238e-23, 4.89858741e-16, 1, 3.2584137e-07, 7.98081238e-23, 3.2584137e-07, -1)
						}
					}
				},
				['Red Skull'] = {
					color = newColorSequence(Color3.new(0.917647, 0, 0)),
					guns = {
						['[Revolver]'] = {
							location = meshes.RedSkull.RedSkullRev,
							equipped = false,
							C0 = newCFrame(-0.0043258667, 0.0084195137, -0.00238037109, 0, 0, -1, 0, 1, 0, 1, 0, 0)
						},
						['[Shotgun]'] = {
							location = meshes.RedSkull.RedSkullRev,
							equipped = false,
							C0 = newCFrame(-0.00326538086, 0.0239292979, -0.039352417, -4.37113883e-08, 0, -1, 0, 1, 0, 1, 0, -4.37113883e-08)
						},
						['[Double-Barrel SG]'] = {
							location = meshes.RedSkull.RedSkullRev,
							equipped = false,
							C0 = newCFrame(-0.0143432617, -0.151709318, 0.00820922852, -1, 0, 0, 0, 1, 0, 0, 0, -1)
						},
						['[RPG]'] = {
							location = meshes.RedSkull.RedSkullRev,
							equipped = false,
							C0 = newCFrame(-0.00149536133, 0.254377961, 0.804840088, -1, 0, 4.37113883e-08, -2.50305399e-21, 1, -5.72632016e-14, -4.37113883e-08, 5.72632016e-14, -1)
						}
					}
				},
				--[[['Galaxy'] = {
					border_color = newColorSequence(Color3.new(0, 0, 1)),
					particle = {
						properties = {
							Color = ColorSequence.new({
								ColorSequenceKeypoint.new(0, Color3.new(0.419608, 0.376471, 1)),
								ColorSequenceKeypoint.new(1, Color3.new(0.419608, 0.376471, 1))
							}),
							Name = 'Galaxy',
							Size = NumberSequence.new({
								NumberSequenceKeypoint.new(0, 0.5),
								NumberSequenceKeypoint.new(0.496, 1.2),
								NumberSequenceKeypoint.new(1, 0.5)
							}),
							Squash = NumberSequence.new({
								NumberSequenceKeypoint.new(0, 0),
								NumberSequenceKeypoint.new(0.173364, 0.525),
								NumberSequenceKeypoint.new(0.584386, -1.7625),
								NumberSequenceKeypoint.new(0.98163, 0.0749998),
								NumberSequenceKeypoint.new(1, 0)
							}),
							Transparency = NumberSequence.new({
								NumberSequenceKeypoint.new(0, 0),
								NumberSequenceKeypoint.new(0.107922, 1),
								NumberSequenceKeypoint.new(0.391504, 0.25),
								NumberSequenceKeypoint.new(0.670494, 0.78125),
								NumberSequenceKeypoint.new(0.845006, 0),
								NumberSequenceKeypoint.new(1, 1)
							}),
							Texture = 'rbxassetid://7422600824',
							ZOffset = 1,
							LightEmission = 0.7,
							Lifetime = NumberRange.new(1, 1),
							Rate = 3,
							Rotation = NumberRange.new(0, 360),
							RotSpeed = NumberRange.new(0, 15),
							Speed = NumberRange.new(1, 1),
							SpreadAngle = Vector2.new(-45, 45)
						}
					},
					guns = {
						['[Revolver]'] = {
							texture = 'rbxassetid://9370936730'
						},
						['[TacticalShotgun]'] = {
							texture = 'rbxassetid://9402279010'
						}
					}
				},]]
				['Kitty'] = {
					tween_duration = 1,
					beam_width = 0.125,
					color = newColorSequence(Color3.new(1, 0.690196, 0.882353), Color3.new(1, 0.929412, 0.964706)),
					guns = {
						['[Revolver]'] = {
							location = meshes.Kitty.KittyRevolver,
							equipped = false,
							shoot_sound = 'rbxassetid://13483022860',
							C0 = newCFrame(0.0310440063, 0.0737591386, 0.0226745605, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[Flamethrower]'] = {
							location = meshes.Kitty.KittyFT,
							equipped = false,
							C0 = newCFrame(-0.265670776, 0.115545571, 0.00997924805, -1, 9.74078034e-21, 5.47124086e-13, 9.74092898e-21, 1, 3.12638804e-13, -5.47126309e-13, 3.12638804e-13, -1)
						},
						['[RPG]'] = {
							location = meshes.Kitty.KittyRPG,
							equipped = false,
							C0 = newCFrame(0.0268554688, 0.0252066851, 0.117408752, -1, 2.51111284e-40, 4.37113883e-08, -3.7545812e-20, 1, -8.58948004e-13, -4.37113883e-08, 8.58948004e-13, -1)
						},
						['[Shotgun]'] = {
							location = meshes.Kitty.KittyShotgun,
							equipped = false,
							shoot_sound = 'rbxassetid://13483035672',
							C0 = newCFrame(0.0233459473, 0.223892093, -0.0213623047, 4.37118963e-08, -6.53699317e-13, 1, 3.47284736e-20, 1, 7.38964445e-13, -0.999997139, 8.69506734e-21, 4.37119354e-08)
						}
					}
				},
				['Toy'] = {
					mesh_location = meshes.Toy,
					tween_duration = 1.25,
					color = newColorSequence({newColorSequenceKeypoint(0, Color3.new(0, 1, 0)), ColorSequenceKeypoint.new(0.5, Color3.new(0.666667, 0.333333, 1)), ColorSequenceKeypoint.new(1, Color3.new(1, 0.666667, 0))}),
					guns = {
						['[Revolver]'] = {
							location = meshes.Toy.RevolverTOY,
							equipped = false,
							C0 = newCFrame(-0.0250854492, -0.144362092, -0.00266647339, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[LMG]'] = {
							location = meshes.Toy.LMGTOY,
							equipped = false,
							C0 = newCFrame(-0.285247803, -0.0942560434, -0.270412445, 1, 0, 4.37113883e-08, 0, 1, 0, -4.37113883e-08, 0, 1)
						},
						['[Double-Barrel SG]'] = {
							location = meshes.Toy.DBToy,
							equipped = false,
							C0 = newCFrame(-0.0484313965, -0.00164616108, -0.0190467834, -1, 0, 0, 0, 1, 0, 0, 0, -1)
						},
						['[RPG]'] = {
							location = meshes.Toy.RPGToy,
							equipped = false,
							C0 = newCFrame(0.00121307373, 0.261434197, -0.318969727, 1, 2.5768439e-12, -4.37113883e-08, 2.57684412e-12, 1, 6.29895225e-12, 4.37113883e-08, 6.29895225e-12, 1)
						}
					}
				},
				['Galactic'] = {
					mesh_location = meshes.Galactic,
					tween_duration = 1.25,
					color = newColorSequence(Color3.new(1, 0, 0)),
					guns = {
						['[Revolver]'] = {
							location = meshes.Galactic.galacticRev,
							equipped = false,
							C0 = newCFrame(-0.049041748, 0.0399398208, -0.00772094727, 0, 0, 1, 0, 1, 0, -1, 0, 0)
						},
						['[TacticalShotgun]'] = {
							location = meshes.Galactic.TacticalGalactic,
							equipped = false,
							C0 = newCFrame(-0.0411682129, -0.0281000137, 0.00103759766, 0, 5.68434189e-14, 1, -1.91456822e-13, 1, 5.68434189e-14, -1, 1.91456822e-13, 0)
						}
					}
				},
				['Water'] = {
					tween_duration = 1.25,
					tween_type = 'Both',
					beam_width = 0.125,
					color = newColorSequence(Color3.new(0, 1, 1), Color3.new(0.666667, 1, 1)),
					guns = {
						['[Revolver]'] = {
							location = meshes.Water.WaterGunRevolver,
							equipped = false,
							C0 = newCFrame(-0.0440063477, 0.028675437, -0.00469970703, 0, 0, -1, 0, 1, 0, 1, 0, 0)
						},
						['[TacticalShotgun]'] = {
							location = meshes.Water.TactWater,
							equipped = false,
							shoot_sound = 'rbxassetid://13814991449',
							C0 = newCFrame(0.0238037109, -0.00912904739, 0.00485229492, 0, 0, 1, 0, 1, 0, -1, 0, 0)
						},
						['[Double-Barrel SG]'] = {
							location = meshes.Water.DBWater,
							equipped = false,
							shoot_sound = 'rbxassetid://13814990235',
							C0 = newCFrame(-0.0710754395, 0.00169920921, -0.0888671875, 0, 0, 1, 0, 1, 0, -1, 0, 0)
						},
						['[Flamethrower]'] = {
							location = meshes.Water.FTWater,
							equipped = false,
							C0 = newCFrame(0.0941314697, 0.593509138, 0.0191040039, -1, 0, 0, 0, 1, 0, 0, 0, -1)
						}
					}
				},
				['GPO'] = {
					color = newColorSequence(Color3.new(1, 0.666667, 0)),
					guns = {
						['[RPG]'] = {
							location = meshes.GPO.Bazooka,
							equipped = false,
							C0 = newCFrame(-0.0184631348, 0.0707798004, 0.219360352, 4.37113883e-08, 1.07062025e-23, 1, -5.75081297e-14, 1, 1.14251725e-36, -1, 5.70182736e-14, 4.37113883e-08)
						},
						['[TacticalShotgun]'] = {
							location = meshes.GPO.MaguTact,
							equipped = false,
							shoot_sound = 'rbxassetid://13998711419',
							C0 = newCFrame(-0.282501221, 0.0472121239, -0.0065612793, -6.60624482e-06, 1.5649757e-08, -1, -5.68434189e-14, 1, -1.56486806e-08, 1, 5.68434189e-14, -6.60624482e-06)
						},
						['[Rifle]'] = {
							location = meshes.GPO.Rifle,
							equipped = false,
							C0 = newCFrame(-0.208007812, 0.185256913, 0.000610351562, -3.37081539e-14, 1.62803403e-07, -1.00000012, -8.74227695e-08, 0.999999881, 1.63036205e-07, 1, 8.74227766e-08, -1.94552524e-14)
						}
					}
				},
				['BIT8'] = {
					tween_duration = 1.25,
					tween_type = 'Width',
					beam_width = 0.125,
					color = newColorSequence(Color3.fromHSV(0.5, 0.9, 1)),
					guns = {
						['[Revolver]'] = {
							location = meshes.BIT8.RPixel,
							equipped = false,
							shoot_sound = 'rbxassetid://13326584088',
							C0 = newCFrame(0.0261230469, -0.042888701, 0.00260925293, -1, 1.355249e-20, -3.55271071e-15, 1.355249e-20, 1, -1.81903294e-27, 3.55271071e-15, -1.81903294e-27, -1)
						},
						['[Flamethrower]'] = {
							location = meshes.BIT8.FTPixel,
							equipped = false,
							C0 = newCFrame(-0.0906066895, -0.0161985159, -0.0117645264, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[Double-Barrel SG]'] = {
							location = meshes.BIT8.DBPixel,
							equipped = false,
							shoot_sound = 'rbxassetid://13326578563',
							C0 = newCFrame(-0.240386963, -0.127295256, -0.00776672363, 0, 0, -1, 0, 1, 0, 1, 0, 0)
						},
						['[RPG]'] = {
							location = meshes.BIT8.RPGPixel,
							equipped = false,
							C0 = newCFrame(0.0102081299, 0.0659624338, 0.362945557, 4.37113883e-08, 0, 1, -5.72632016e-14, 1, 2.50305399e-21, -1, 5.72632016e-14, 4.37113883e-08)
						}
					}
				},
				['Electric'] = {
					color = newColorSequence(Color3.new(0, 1, 1), Color3.new(0.666667, 1, 1)),
					guns = {
						['[Revolver]'] = {
							location = meshes.Electric.ElectricRevolver,
							equipped = false,
							C0 = newCFrame(0.185462952, 0.0312761068, 0.000610351562, 0, 0, -1, 0, 1, 0, 1, 0, 0)
						},
						['[DrumGun]'] = {
							location = meshes.Electric.ElectricDrum,
							equipped = false,
							C0 = newCFrame(-0.471969604, 0.184426308, 0.075378418, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[SMG]'] = {
							location = meshes.Electric.ElectricSMG,
							equipped = false,
							C0 = newCFrame(-0.0620956421, 0.109580457, 0.00729370117, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[Shotgun]'] = {
							location = meshes.Electric.ElectricShotgun,
							equipped = false,
							C0 = newCFrame(6.10351562e-05, 0.180232108, -0.624732971, 1, 0, -4.37113883e-08, 0, 1, 0, 4.37113883e-08, 0, 1)
						},
						['[Rifle]'] = {
							location = meshes.Electric.ElectricRifle,
							equipped = false,
							C0 = newCFrame(0.181793213, -0.0415201783, 0.00421142578, 1.8189894e-12, 6.6174449e-24, 1, 7.27595761e-12, 1, 6.6174449e-24, -1, -7.27595761e-12, -1.8189894e-12)
						},
						['[P90]'] = {
							location = meshes.Electric.ElectricP90,
							equipped = false,
							C0 = newCFrame(0.166191101, -0.225557804, -0.0075378418, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[LMG]'] = {
							location = meshes.Electric.ElectricLMG,
							equipped = false,
							C0 = newCFrame(0.142379761, 0.104723871, -0.303771973, -1, 0, -4.37113883e-08, 0, 1, 0, 4.37113883e-08, 0, -1)
						},
						['[Flamethrower]'] = {
							location = meshes.Electric.ElectricFT,
							equipped = false,
							C0 = newCFrame(-0.158782959, 0.173444271, 0.00640869141, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[Double-Barrel SG]'] = {
							location = meshes.Electric.ElectricDB,
							equipped = false,
							C0 = newCFrame(0.0755996704, -0.0420352221, 0.00543212891, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[Glock]'] = {
							location = meshes.Electric.ElectricGlock,
							equipped = false,
							C0 = newCFrame(-0.00207519531, 0.0318723917, 0.0401077271, 0, 0, -1, 0, 1, 0, 1, 0, 0)
						},
						['[AUG]'] = {
							location = meshes.Electric.ElectricAUG,
							equipped = false,
							C0 = newCFrame(0.331085205, -0.0117390156, 0.00155639648, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[SilencerAR]'] = {
							location = meshes.Electric.ElectricAR,
							equipped = false,
							C0 = newCFrame(-0.16942215, 0.0508521795, 0.0669250488, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[AK47]'] = {
							location = meshes.Electric.ElectricAK,
							equipped = false,
							C0 = newCFrame(0.155792236, 0.18423444, 0.00140380859, 0, 0, -1, 0, 1, 0, 1, 0, 0)
						}
					}
				},
				--[[['Shadow'] = {
					Color = ColorSequence.new(Color3.new(0.560784, 0.470588, 1), Color3.new(0.576471, 0.380392, 1)),
					['Rifle'] = {
						Equipped = false
					},
					['Shotgun'] = {
						Equipped = false,
						Location = meshes.Shadow.ShotgunGhost,
						CFrame = CFrame.new(3.05175781e-05, 0.199999928, 3.81469727e-06, -1, 0, -4.37113883e-08, 0, 1, 0, 4.37113883e-08, 0, -1)
					},
					['Revolver'] = {
						Equipped = false,
						Location = meshes.Shadow.RevolverGhost,
						CFrame = CFrame.new(1.52587891e-05, 0, 0, 1, 0, 8.74227766e-08, 0, 1, 0, -8.74227766e-08, 0, 1)
					}
				}]]
				['Halloween23'] = {
					guns = {
						['[Revolver]'] = {
							equipped = false,
							location = meshes.Halloween.Rev,
							shoot_sound = 'rbxassetid://14924285721',
							C0 = newCFrame(-0.0257873535, -0.0117108226, -0.00671386719, -1, 0, 0, 0, 1, 0, 0, 0, -1)
						},
						['[Double-Barrel SG]'] = {
							equipped = false,
							location = meshes.Halloween.DB,
							shoot_sound = 'rbxassetid://14924282919',
							C0 = newCFrame(-0.00271606445, -0.0485508144, 0.000732421875, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						},
						['[Shotgun]'] = {
							equipped = false,
							location = meshes.Halloween.SG,
							shoot_sound = 'rbxassetid://14924268000',
							C0 = newCFrame(0.00573730469, 0.294590235, -0.115814209, 0, 0, -1, 0, 1, 0, 1, 0, 0)
						},
						['[TacticalShotgun]'] = {
							equipped = false,
							location = meshes.Halloween.Tact,
							shoot_sound = 'rbxassetid://14924256223',
							C0 = newCFrame(-0.0715637207, -0.0843618512, 0.00582885742, -1, 0, 0, 0, 1, 0, 0, 0, -1)
						}
					}
				},
				['Soul'] = {
					guns = {
						['[Revolver]'] = {
							equipped = false,
							location = meshes.Soul.rev,
							shoot_sound = 'rbxassetid://14909152822',
							C0 = newCFrame(-0.0646362305, 0.2725088, -0.00242614746, 0, 0, -1, 0, 1, 0, 1, 0, 0)
						},
						['[Double-Barrel SG]'] = {
							equipped = false,
							location = meshes.Soul.db,
							shoot_sound = 'rbxassetid://14909164664',
							C0 = newCFrame(0.405822754, 0.0975035429, -0.00506591797, -1, 0, 0, 0, 1, 0, 0, 0, -1)
						},
						['[TacticalShotgun]'] = {
							equipped = false,
							location = meshes.Soul.tact,
							shoot_sound = 'rbxassetid://14918188609',
							C0 = newCFrame(-0.347473145, 0.0268714428, 0.00553894043, 1, 0, 0, 0, 1, 0, 0, 0, 1)
						}
					}
				},
				['Heaven'] = {
					color = newColorSequence(Color3.new(1, 1, 1)),
					tween_duration = 1.25,
					easing_style = Enum.EasingStyle.Quad,
					easing_direction = Enum.EasingDirection.Out,
					beam_width = 0.13,
					guns = {
						['[Revolver]'] = {
							equipped = false,
							location = meshes.Heaven.Revolver,
							C0 = newCFrame(-0.0829315186, -0.0831851959, -0.00296020508, -0.999999881, 2.94089277e-17, 8.27179774e-25, -2.94089277e-17, 0.999999881, 6.85215614e-16, 8.27179922e-25, -6.85215667e-16, -1)
						},
						['[Double-Barrel SG]'] = {
							equipped = false,
							location = meshes.Heaven.DB,
							shoot_sound = 'rbxassetid://14489852879',
							C0 = newCFrame(-0.0303955078, 0.022110641, 0.00296020508, -0.999997139, -7.05812226e-16, 7.85568618e-30, 7.05812226e-16, 0.999997139, -2.06501178e-14, 6.44518474e-30, 2.06501042e-14, -0.999999046)
						}
					}
				},
				['Void'] = {
					guns = {
						['[Revolver]'] = {
							equipped = false,
							location = meshes.Void.rev,
							C0 = newCFrame(-0.00503540039, 0.0082899332, -0.00164794922, 0, 0, -1, 0, 1, 0, 1, 0, 0)
						},
						['[TacticalShotgun]'] = {
							equipped = false,
							location = meshes.Void.tact,
							C0 = newCFrame(0.0505371094, -0.0487936139, 0.00158691406, 0, 0, 1, 0, 1, 0, -1, 0, 0)
						}
					}
				},
				['DH-Stars II'] = {
					guns = {
						['[Revolver]'] = {
							equipped = false,
							location = meshes.Popular.STARSREV,
							C0 = newCFrame(0.0578613281, -0.0479719043, -0.00115966797, -1.00000405, 1.15596135e-16, 1.64267286e-30, -1.15596135e-16, 1, 2.99751983e-14, 1.66683049e-30, -2.99751983e-14, -1.00000405)
						}
					}
				},
				['DH-Verified'] = {
					guns = {
						['[Revolver]'] = {
							equipped = false,
							location = meshes.Popular.VERIFIEDREV,
							C0 = newCFrame(0.049407959, -0.0454721451, 0.00158691406, -1, 0, 0, 0, 1, 2.22044605e-15, 0, -2.22044605e-15, -1)
						}
					}
				},
				['Candy'] = {
					guns = {
						['[Revolver]'] = {
							equipped = false,
							location = meshes.Candy.RevolverCandy,
							C0 = newCFrame(-0.106658936, -0.0681198835, 0.00198364258, 0, 0, -1, 0, 1, 0, 1, 0, 0)
						},
						['[Double-Barrel SG]'] = {
							equipped = false,
							location = meshes.Candy.DBCandy,
							C0 = newCFrame(0.0430603027, -0.0375298262, -0.00198364258, 0, 0, 1, 0, 1, 0, -1, 0, 0)
						}
					}
				}
			};
		
			mkelement = function(class, parent, props)
				local obj = Instance.new(class);
		
				for i, v in next, props do
					obj[i] = v;
				end;
		
				obj.Parent = parent;
				return obj;
			end;
		
			find_gun = (function(gun_name, instance)
				for i, v in next, instance:GetChildren() do
					if v:IsA('Tool') then
						if (v.Name == gun_name) then
							return v
						end
					end
				end
			end);
		
			InventoryChanger.Functions.GameEquip = function(gun, skin)
				return replicated_storage.MainEvent:FireServer('EquipWeaponSkins', gun, skin);
			end;
		
			InventoryChanger.Functions.AddOwnedSkins = function()
				for _, v in ipairs(entries:GetChildren()) do
					local ext_name = v.Name:match('%[(.-)%]');
					local skin_name, _ = v.Name:gsub('%[.-%]', '');
					if 
						ext_name 
						and skin_name 
						and InventoryChanger.Skins[skin_name] 
						and InventoryChanger.Skins[skin_name].guns 
						and InventoryChanger.Skins[skin_name].guns['[' .. ext_name .. ']']
					then
						local Preview = v:FindFirstChild('Preview');
		
						if Preview and Preview:FindFirstChild('Equipped') and Preview.Equipped.Visible then
							table.insert(InventoryChanger.Owned, { frame = v, gun = '[' .. ext_name .. ']' })
						end;
					end;
				end;
			end;
		
			InventoryChanger.Functions.UnequipGameSkins = function()
				for _, v in ipairs(InventoryChanger.Owned) do
					local SkinInfo = v.frame.SkinInfo;
					local Container = SkinInfo.Container;
					local SkinName = Container.SkinName.Text;
		
					InventoryChanger.Functions.GameEquip(v.gun, SkinName)
				end;
			end;
		
			InventoryChanger.Functions.Unload = function()
				return Utilities.Unload();
			end;
		
			InventoryChanger.Functions.Reload = function()
				local function wait_for_child(parent, child)
					local child = parent:WaitForChild(child);
					while not child do
						child = parent:WaitForChild(child);
					end;
					return child;
				end;
				
				client = players.LocalPlayer;
				player_gui = client.PlayerGui;
		
				repeat task.wait() until player_gui;
		
				main_gui = wait_for_child(player_gui, 'MainScreenGui');
				crew = wait_for_child(main_gui, 'Crew');
		
				bottom_left = wait_for_child(crew, 'BottomLeft');
				bottom_left = bottom_left.Frame;
		
				skins_button = wait_for_child(bottom_left, 'Skins');
		
				weapon_skins_gui = wait_for_child(main_gui, 'WeaponSkinsGUI');
				
				gui_body_wrapper = wait_for_child(weapon_skins_gui, 'Body');
				body_wrapper = wait_for_child(gui_body_wrapper, 'Wrapper');
				
				skin_view = wait_for_child(body_wrapper, 'SkinView');
				skin_view_frame = wait_for_child(skin_view, 'Frame');
		
				guns = wait_for_child(skin_view_frame, 'Guns').Contents;
				entries = wait_for_child(skin_view_frame, 'Skins').Contents.Entries;
		
				InventoryChanger.Functions.Unload();
		
				cout('Reload', 'Script successfully reloaded!');
				cout('Reload', 'Waiting for skins to load...');
		
				wait_for_child(entries, '[Revolver]Golden Age');
		
				cout('Reload', 'Skins successfully loaded.');
				InventoryChanger.Functions.AddOwnedSkins();
				InventoryChanger.Functions.UnequipGameSkins();
		
				for i, v in next, guns:GetChildren() do
					if v:IsA('Frame') and v.Name ~= 'GunEntry' and v.Name ~= 'Trading' and v.Name ~= '[Mask]' then
						Utilities.AddConnection(v.Button.MouseButton1Click, function()
							local extracted_name = v.Name:match(regex);
							if extracted_name then
								InventoryChanger.Functions.Start(extracted_name);
							end;
						end);
					end;
				end;
			end;
		
			InventoryChanger.Functions.Equip = function(gun_name, skin_name)
				print('[DEBUG]', 'Equip function has been invoked.', gun_name, skin_name or 'Default')
				local gun = find_gun(gun_name, client.Backpack) or find_gun(gun_name, client.Character);
				if not skin_name then
					if gun and gun.Name == gun_name then
						for _, v in next, gun.Default:GetChildren() do v:Destroy() end;
						
						gun.Default.Transparency = 0;
						--if InventoryChanger.Selected[gun.Name] and not InventoryChanger.Skins[InventoryChanger.Selected[gun.Name]].Location then
							--gun.Default.TextureID = 'rbxassetid://8117372147';
						--end;
						
						if gun.Name == '[Silencer]' or gun.Name == '[SilencerAR]' then
							gun:FindFirstChild('Part').Transparency = 0;
						end;
		
						local skin_name = InventoryChanger.Selected[gun.Name];
		
						if skin_name and InventoryChanger.Skins[skin_name] and InventoryChanger.Skins[skin_name].guns and InventoryChanger.Skins[skin_name].guns[gun.Name] then
							if InventoryChanger.Skins[skin_name].guns[gun.Name].TracerLoop then
								InventoryChanger.Skins[skin_name].guns[gun.Name].TracerLoop:Disconnect();
								InventoryChanger.Skins[skin_name].guns[gun.Name].TracerLoop = nil;
							end;
		
							if InventoryChanger.Skins[skin_name].guns[gun.Name].shoot_sound_loop then
								InventoryChanger.Skins[skin_name].guns[gun.Name].shoot_sound_loop:Disconnect();
								InventoryChanger.Skins[skin_name].guns[gun.Name].shoot_sound_loop = nil;
							end;
						end;
					end;
		
					return;
				end;
				
				if gun and gun.Name == gun_name and skin_name then
					cout('DEBUG', 'Has skin name');
					local skin_pack = InventoryChanger.Skins[skin_name];
					local guns = skin_pack.guns;
					if skin_pack and guns and not skin_pack.texture then
						cout('DEBUG', 'Changing skin assets');
						for _, x in next, gun.Default:GetChildren() do x:Destroy() end;
						
						local clone = guns[gun_name].location:Clone();
						clone.Name = 'Mesh';
						clone.Parent = gun.Default;
						
						local weld = Instance.new('Weld', clone);
						weld.Part0 = gun.Default;
						weld.Part1 = clone;
						weld.C0 = guns[gun_name].C0;
						
						gun.Default.Transparency = 1;
		
						if guns[gun_name].shoot_sound then
							if guns[gun_name].shoot_sound_loop then
								guns[gun_name].shoot_sound_loop:Disconnect();
								guns[gun_name].shoot_sound_loop = nil;
							end;
							gun.Handle.ShootSound.SoundId = guns[gun_name].shoot_sound;
							guns[gun_name].shoot_sound_loop = gun.Handle.ChildAdded:Connect(function(child)
								if child:IsA('Sound') and child.Name == 'ShootSound' then
									child.SoundId = guns[gun_name].shoot_sound;
								end;
							end);
						end;
					end;
				end;
			end;
		
			InventoryChanger.Functions.Start = function(name)
				for i, v in next, entries:GetChildren() do
					local skin_name, _ = v.Name:gsub('%[.-%]', '');
		
					if string.find(v.Name, name, 1, true) and InventoryChanger.Skins[skin_name] and InventoryChanger.Skins[skin_name].guns and InventoryChanger.Skins[skin_name].guns['['..name..']'] and InventoryChanger.Skins[skin_name].guns['['..name..']'].location then
						local Preview = v:FindFirstChild('Preview');
						local Button = v:FindFirstChild('Button');
						local skinInfo = v:FindFirstChild('SkinInfo');
		
						if Preview and Button and skinInfo then
							local Label = Preview:FindFirstChild('LockImageLabel');
							local AmountValue = Preview:FindFirstChild('AmountValue');
							local Equipped = Preview:FindFirstChild('Equipped');
							local container = skinInfo:FindFirstChild('Container');
		
							local extracted_name = v.Name:match(regex);
		
							if Equipped and extracted_name then
								Equipped.Visible = InventoryChanger.Skins[skin_name] and InventoryChanger.Skins[skin_name].guns['['..extracted_name..']'] and InventoryChanger.Skins[skin_name].guns['['..extracted_name..']'].equipped or false;
								InventoryChanger.Functions.Equip('['..extracted_name..']', InventoryChanger.Selected['['..extracted_name..']'])
		
								if Label then
									Label.Visible = false;
								end;
		
								if container and container.SellButton then
									container.SellButton.Visible = true;
								end;
							
								if AmountValue then
									AmountValue.Visible = true;
									AmountValue.Text = 'x1';
								end;
							
								if getgenv().InventoryConnections[v.Name] then
									getgenv().InventoryConnections[v.Name]:Disconnect();
									getgenv().InventoryConnections[v.Name] = nil;
								end;
		
								v.Button:Destroy();
								local props = { Text = '',BackgroundTransparency = 1,Size = UDim2.new(1, 0, 0.7, 0),ZIndex = 5,Name = 'Button',Position = UDim2.new(0, 0, 0, 0)};
								local new_btn = mkelement('TextButton', v, props);
		
								getgenv().InventoryConnections[v.Name] = new_btn.MouseButton1Click:Connect(function()
									InventoryChanger.Skins[skin_name].guns['['..extracted_name..']'].equipped = not InventoryChanger.Skins[skin_name].guns['['..extracted_name..']'].equipped;
									InventoryChanger.Selected['['..extracted_name..']'] = InventoryChanger.Skins[skin_name].guns['['..extracted_name..']'].equipped and skin_name or nil;
									Equipped.Visible = InventoryChanger.Skins[skin_name].guns['['..extracted_name..']'].equipped;
		
									for k, x in ipairs(entries:GetChildren()) do
										if x.Name:match(regex) == extracted_name and x ~= v then
											x.Preview.Equipped.Visible = false;
		
											for _, l in next, InventoryChanger.Skins do
												if _ ~= skin_name and l['['..extracted_name..']'] and l['['..extracted_name..']'].equipped then
													l[extracted_name].equipped = false
												end;
											end;
										end;
										
										if x ~= v and string.find(x.Name, name, 1, true) and InventoryChanger.Skins[skin_name] and InventoryChanger.Skins[skin_name].guns and InventoryChanger.Skins[skin_name].guns['['..name..']'] and InventoryChanger.Skins[skin_name].guns['['..name..']'].location then
											local Preview = v:FindFirstChild('Preview');
											local Button = v:FindFirstChild('Button');
											local skinInfo = v:FindFirstChild('SkinInfo');
											
											if Preview and Button and skinInfo then
												local Label = Preview:FindFirstChild('LockImageLabel');
												local AmountValue = Preview:FindFirstChild('AmountValue');
												local Equipped = Preview:FindFirstChild('Equipped');
												local container = skinInfo:FindFirstChild('Container');
												
												if Label then
													Label.Visible = false;
												end;
								
												if container and container.SellButton then
													container.SellButton.Visible = true;
												end;
												
												if AmountValue then
													AmountValue.Visible = true;
													AmountValue.Text = 'x1';
												end;
											end;
		
											InventoryChanger.Owned = {};
											InventoryChanger.Functions.AddOwnedSkins();
											InventoryChanger.Functions.UnequipGameSkins();
										end;
									end;
								end);
							end;
						end;
					end;
				end;
			end;
		
			InventoryChanger.Functions.CharacterAdded = function(character)
				if getgenv().InventoryConnections.ChildAdded then
					getgenv().InventoryConnections.ChildAdded:Disconnect();
					getgenv().InventoryConnections.ChildAdded = nil;
				end;
		
				if getgenv().InventoryConnections.ChildRemoved then
					getgenv().InventoryConnections.ChildRemoved:Disconnect();
					getgenv().InventoryConnections.ChildRemoved = nil;
				end;
		
				getgenv().InventoryConnections.ChildAdded = character.ChildAdded:Connect(function(child)
					if child:IsA('Tool') and child:FindFirstChild('GunScript') then
						InventoryChanger.Functions.Equip(child.Name, InventoryChanger.Selected[child.Name]);
						local skin_name = InventoryChanger.Selected[child.Name];
						
						if skin_name then
							if InventoryChanger.Skins[skin_name].color and InventoryChanger.Skins[skin_name].guns[child.Name].equipped then
								if InventoryChanger.Skins[skin_name].guns[child.Name].TracerLoop then
									InventoryChanger.Skins[skin_name].guns[child.Name].TracerLoop:Disconnect();
									InventoryChanger.Skins[skin_name].guns[child.Name].TracerLoop = nil;
								end;
		
								InventoryChanger.Skins[skin_name].guns[child.Name].TracerLoop = Ignored.DescendantAdded:Connect(function(descendant)
									local gun = find_gun(child.Name, client.Character) or nil;
		
									if gun and descendant:IsDescendantOf(siren) and descendant:IsA('Beam') then
										local pos1 = (descendant.Attachment0.WorldCFrame.Position.X > gun.Handle.CFrame.Position.X) and descendant.Attachment0.WorldCFrame.Position or gun.Handle.CFrame.Position;
										local pos2 = (descendant.Attachment0.WorldCFrame.Position.X < gun.Handle.CFrame.Position.X) and descendant.Attachment0.WorldCFrame.Position or gun.Handle.CFrame.Position;
		
										if math.abs(client.Character.HumanoidRootPart.Velocity.X) < 22 and (pos1 - pos2).Magnitude < 5 or (pos1 - pos2).Magnitude < 20 then
											local skin_pack = InventoryChanger.Skins[skin_name];
											local guns = skin_pack and skin_pack.guns or nil
											local tween_duration = skin_pack and (skin_pack.tween_duration or guns and guns[gun.Name] and guns[gun.Name].tween_duration) or nil;
											local width = skin_pack and (skin_pack.beam_width or guns and guns[gun.Name] and guns[gun.Name].beam_width) or nil;
											local color = skin_pack and (skin_pack.color or guns and guns[gun.Name] and guns[gun.Name].color) or nil;
											local easing_direction = skin_pack and (skin_pack.easing_direction or guns and guns[gun.Name] and guns[gun.Name].easing_direction) or nil;
											local easing_style = skin_pack and (skin_pack.easing_style or guns and guns[gun.Name] and guns[gun.Name].easing_style) or nil;
		
											if skin_pack and tween_duration and color then
												local clonedParent = descendant.Parent:Clone();
		
												clonedParent.Parent = workspace.Vehicles;
												descendant.Parent:Destroy();
												if width then
													clonedParent:FindFirstChild('GunBeam').Width1 = width;
												end;
												clonedParent:FindFirstChild('GunBeam').Color = color;
												Utilities.Tween({
													object = clonedParent:FindFirstChild('GunBeam'),
													info = { tween_duration, easing_style, easing_direction },
													properties = { Width1 = 0 },
													callback = function()
														clonedParent:Destroy();
													end
												})
											elseif color then
												descendant.Color = color;
											end;
										end;
									end;
								end);
							else
								if InventoryChanger.Skins[skin_name].guns[child.Name].TracerLoop then
									InventoryChanger.Skins[skin_name].guns[child.Name].TracerLoop:Disconnect();
									InventoryChanger.Skins[skin_name].guns[child.Name].TracerLoop = nil;
								end;
							end;
						end;
					end;
				end);
		
				getgenv().InventoryConnections.ChildRemoved = character.ChildRemoved:Connect(function(child)
					if child:IsA('Tool') and child:FindFirstChild('GunScript') then
						InventoryChanger.Functions.Equip(child.Name, false);
		
						local skin_name = InventoryChanger.Selected[child.Name];
		
						if skin_name then
							if InventoryChanger.Skins[skin_name].guns[child.Name].TracerLoop then
								InventoryChanger.Skins[skin_name].guns[child.Name].TracerLoop:Disconnect();
								InventoryChanger.Skins[skin_name].guns[child.Name].TracerLoop = nil;
							end;
						end;
					end;
				end);
				
				InventoryChanger.Functions.Reload();
			end;
		
			if getgenv().InventoryConnections.CharacterAdded then
				getgenv().InventoryConnections.CharacterAdded:Disconnect();
				getgenv().InventoryConnections.CharacterAdded = nil;
			end;
			getgenv().InventoryConnections.CharacterAdded = client.CharacterAdded:Connect(InventoryChanger.Functions.CharacterAdded);    InventoryChanger.Functions.CharacterAdded(client.Character);end;
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


XTab:AddButton({
	Name = "FREE EMOTES",
	Callback = function()
	loadstring(game:HttpGet("https://pastebin.com/raw/eCpipCTH"))() 	
  	end    
})

XTab:AddButton({
	Name = "No Delay",
	Callback = function()
		local ReplicatedStorage = game.ReplicatedStorage
		local Network = game.Network
		local Delay = ReplicatedStorage.BulletHole.Delay
		
		Delay.Position:Destroy()
		Delay.Position = 0
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "ANTI BAG",
	Callback = function()
		game.Players.LocalPlayer.Character["Christmas_Sock"]:Destroy()
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


XTab:AddButton({
	Name = "AniMation Pack",
	Callback = function()
		local Folder = Instance.new('Folder', game:GetService("Workspace"))
		local AnimationPack = game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.AnimationPack
		local ScrollingFrame = AnimationPack.ScrollingFrame
		local CloseButton = AnimationPack.CloseButton
	
		AnimationPack.Visible = true
	
		local LeanAnimation = Instance.new("Animation", Folder)
		LeanAnimation.Name = "LeanAnimation"
		LeanAnimation.AnimationId = "rbxassetid://3152375249"
		local Lean = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(LeanAnimation)
	
		local LayAnimation = Instance.new("Animation", Folder)
		LayAnimation.Name = "LayAnimation"
		LayAnimation.AnimationId = "rbxassetid://3152378852"
		local Lay = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(LayAnimation)
	
		local Dance1Animation = Instance.new("Animation", Folder)
		Dance1Animation.Name = "Dance1Animation"
		Dance1Animation.AnimationId = "rbxassetid://3189773368"
		local Dance1 = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(Dance1Animation)
	
		local Dance2Animation = Instance.new("Animation", Folder)
		Dance2Animation.Name = "Dance2Animation"
		Dance2Animation.AnimationId = "rbxassetid://3189776546"
		local Dance2 = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(Dance2Animation)
	
		local GreetAnimation = Instance.new("Animation", Folder)
		GreetAnimation.Name = "GreetAnimation"
		GreetAnimation.AnimationId = "rbxassetid://3189777795"
		local Greet = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(GreetAnimation)
	
		local PrayingAnimation = Instance.new("Animation", Folder)
		PrayingAnimation.Name = "PrayingAnimation"
		PrayingAnimation.AnimationId = "rbxassetid://3487719500"
		local Praying = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(PrayingAnimation)
	
		for i,v in pairs(ScrollingFrame:GetChildren()) do
			if v.Name == "TextButton" then
				if v.Text == "Lean" then
					v.Name = "LeanButton"
				end
			end
		end
	
		for i,v in pairs(ScrollingFrame:GetChildren()) do
			if v.Name == "TextButton" then
				if v.Text == "Lay" then
					v.Name = "LayButton"
				end
			end
		end
	
		for i,v in pairs(ScrollingFrame:GetChildren()) do
			if v.Name == "TextButton" then
				if v.Text == "Dance1" then
					v.Name = "Dance1Button"
				end
			end
		end
	
		for i,v in pairs(ScrollingFrame:GetChildren()) do
			if v.Name == "TextButton" then
				if v.Text == "Dance2" then
					v.Name = "Dance2Button"
				end
			end
		end
	
		for i,v in pairs(ScrollingFrame:GetChildren()) do
			if v.Name == "TextButton" then
				if v.Text == "Greet" then
					v.Name = "GreetButton"
				end
			end
		end
	
		for i,v in pairs(ScrollingFrame:GetChildren()) do
			if v.Name == "TextButton" then
				if v.Text == "Praying" then
					v.Name = "PrayingButton"
				end
			end
		end
	
		function Stop()
			Lay:Stop()
			Lean:Stop()
			Dance1:Stop()
			Dance2:Stop()
			Greet:Stop()
			Praying:Stop()
		end
	
		local LeanTextButton = ScrollingFrame.LeanButton
		local LayTextButton = ScrollingFrame.LayButton
		local Dance1TextButton = ScrollingFrame.Dance1Button
		local Dance2TextButton = ScrollingFrame.Dance2Button
		local GreetTextButton = ScrollingFrame.GreetButton
		local PrayingTextButton = ScrollingFrame.PrayingButton
	
		AnimationPack.MouseButton1Click:Connect(function()
			if ScrollingFrame.Visible == false then
				ScrollingFrame.Visible = true
				CloseButton.Visible = true
			end
		end)
		CloseButton.MouseButton1Click:Connect(function()
			if ScrollingFrame.Visible == true then
				ScrollingFrame.Visible = false
				CloseButton.Visible = false
			end
		end)
		LeanTextButton.MouseButton1Click:Connect(function()
			Stop()
			Lean:Play()
		end)
		LayTextButton.MouseButton1Click:Connect(function()
			Stop()
			Lay:Play()
		end)
		Dance1TextButton.MouseButton1Click:Connect(function()
			Stop()
			Dance1:Play()
		end)
		Dance2TextButton.MouseButton1Click:Connect(function()
			Stop()
			Dance2:Play()
		end)
		GreetTextButton.MouseButton1Click:Connect(function()
			Stop()
			Greet:Play()
		end)
		PrayingTextButton.MouseButton1Click:Connect(function()
			Stop()
			Praying:Play()
		end)
	
		game:GetService("Players").LocalPlayer.Character.Humanoid.Running:Connect(function()
			Stop()
		end)
		game:GetService("Players").LocalPlayer.Character.Humanoid.Died:Connect(function()
			Stop()
			repeat
				wait()
			until game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 100
			wait(1)
			local AnimationPack = game:GetService("Players").LocalPlayer.PlayerGui.MainScreenGui.AnimationPack
			local ScrollingFrame = AnimationPack.ScrollingFrame
			local CloseButton = AnimationPack.CloseButton
	
			AnimationPack.Visible = true
	
			local LeanAnimation = Instance.new("Animation", Folder)
			LeanAnimation.Name = "LeanAnimation"
			LeanAnimation.AnimationId = "rbxassetid://3152375249"
			local Lean = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(LeanAnimation)
	
			local LayAnimation = Instance.new("Animation", Folder)
			LayAnimation.Name = "LayAnimation"
			LayAnimation.AnimationId = "rbxassetid://3152378852"
			local Lay = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(LayAnimation)
	
			local Dance1Animation = Instance.new("Animation", Folder)
			Dance1Animation.Name = "Dance1Animation"
			Dance1Animation.AnimationId = "rbxassetid://3189773368"
			local Dance1 = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(Dance1Animation)
	
			local Dance2Animation = Instance.new("Animation", Folder)
			Dance2Animation.Name = "Dance2Animation"
			Dance2Animation.AnimationId = "rbxassetid://3189776546"
			local Dance2 = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(Dance2Animation)
	
			local GreetAnimation = Instance.new("Animation", Folder)
			GreetAnimation.Name = "GreetAnimation"
			GreetAnimation.AnimationId = "rbxassetid://3189777795"
			local Greet = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(GreetAnimation)
	
			local PrayingAnimation = Instance.new("Animation", Folder)
			PrayingAnimation.Name = "PrayingAnimation"
			PrayingAnimation.AnimationId = "rbxassetid://3487719500"
			local Praying = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(PrayingAnimation)
	
			for i,v in pairs(ScrollingFrame:GetChildren()) do
				if v.Name == "TextButton" then
					if v.Text == "Lean" then
						v.Name = "LeanButton"
					end
				end
			end
	
			for i,v in pairs(ScrollingFrame:GetChildren()) do
				if v.Name == "TextButton" then
					if v.Text == "Lay" then
						v.Name = "LayButton"
					end
				end
			end
	
			for i,v in pairs(ScrollingFrame:GetChildren()) do
				if v.Name == "TextButton" then
					if v.Text == "Dance1" then
						v.Name = "Dance1Button"
					end
				end
			end
	
			for i,v in pairs(ScrollingFrame:GetChildren()) do
				if v.Name == "TextButton" then
					if v.Text == "Dance2" then
						v.Name = "Dance2Button"
					end
				end
			end
	
			for i,v in pairs(ScrollingFrame:GetChildren()) do
				if v.Name == "TextButton" then
					if v.Text == "Greet" then
						v.Name = "GreetButton"
					end
				end
			end
	
			for i,v in pairs(ScrollingFrame:GetChildren()) do
				if v.Name == "TextButton" then
					if v.Text == "Praying" then
						v.Name = "PrayingButton"
					end
				end
			end
	
			function Stop()
				Lay:Stop()
				Lean:Stop()
				Dance1:Stop()
				Dance2:Stop()
				Greet:Stop()
				Praying:Stop()
			end
	
			local LeanTextButton = ScrollingFrame.LeanButton
			local LayTextButton = ScrollingFrame.LayButton
			local Dance1TextButton = ScrollingFrame.Dance1Button
			local Dance2TextButton = ScrollingFrame.Dance2Button
			local GreetTextButton = ScrollingFrame.GreetButton
			local PrayingTextButton = ScrollingFrame.PrayingButton
	
			AnimationPack.MouseButton1Click:Connect(function()
				if ScrollingFrame.Visible == false then
					ScrollingFrame.Visible = true
					CloseButton.Visible = true
				end
			end)
			CloseButton.MouseButton1Click:Connect(function()
				if ScrollingFrame.Visible == true then
					ScrollingFrame.Visible = false
					CloseButton.Visible = false
				end
			end)
			LeanTextButton.MouseButton1Click:Connect(function()
				Stop()
				Lean:Play()
			end)
			LayTextButton.MouseButton1Click:Connect(function()
				Stop()
				Lay:Play()
			end)
			Dance1TextButton.MouseButton1Click:Connect(function()
				Stop()
				Dance1:Play()
			end)
			Dance2TextButton.MouseButton1Click:Connect(function()
				Stop()
				Dance2:Play()
			end)
			GreetTextButton.MouseButton1Click:Connect(function()
				Stop()
				Greet:Play()
			end)
			PrayingTextButton.MouseButton1Click:Connect(function()
				Stop()
				Praying:Play()
			end)
		end)
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


XTab:AddButton({
	Name = "ANTI AFK",
	Callback = function()
		wait(0.5)local ba=Instance.new("ScreenGui")
		local ca=Instance.new("TextLabel")local da=Instance.new("Frame")
		local _b=Instance.new("TextLabel")local ab=Instance.new("TextLabel")ba.Parent=game.CoreGui
		ba.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;ca.Parent=ba;ca.Active=true
		ca.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)ca.Draggable=true
		ca.Position=UDim2.new(0.698610067,0,0.098096624,0)ca.Size=UDim2.new(0,304,0,52)
		ca.Font=Enum.Font.SourceSansSemibold;ca.Text="YOU ARE AFK"ca.TextColor3=Color3.new(0,1,1)
		ca.TextSize=22;da.Parent=ca
		da.BackgroundColor3=Color3.new(0.196078,0.196078,0.196078)da.Position=UDim2.new(0,0,1.0192306,0)
		da.Size=UDim2.new(0,304,0,107)_b.Parent=da
		_b.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)_b.Position=UDim2.new(0,0,0.800455689,0)
		_b.Size=UDim2.new(0,304,0,21)_b.Font=Enum.Font.Arial;_b.Text="Made by OsDee"
		_b.TextColor3=Color3.new(1,1,1)_b.TextSize=20;ab.Parent=da
		ab.BackgroundColor3=Color3.new(0.176471,0.176471,0.176471)ab.Position=UDim2.new(0,0,0.158377379,0)
		ab.Size=UDim2.new(0,304,0,44)ab.Font=Enum.Font.ArialBold;ab.Text="Status: Script Started"
		ab.TextColor3=Color3.new(1,1,1)ab.TextSize=20;local bb=game:service'VirtualUser'
		game:service'Players'.LocalPlayer.Idled:connect(function()
		bb:CaptureController()bb:ClickButton2(Vector2.new())
		ab.Text="You went idle and ROBLOX tried to kick you but we reflected it!"wait(2)ab.Text="Script Re-Enabled"end)	
  	end    
})



--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

Tab:AddButton({
	Name = "Anti Slow",
	Callback = function()
		game.Players.LocalPlayer.CharacterAdded:Connect(function()
			repeat wait() until game.Players.LocalPlayer.Character
			  repeat wait() until game.Players.LocalPlayer.Character.BodyEffects
				repeat wait() until game.Players.LocalPlayer.Character.BodyEffects.Movement
				  wait()
				  game.Players.LocalPlayer.Character.BodyEffects.Movement.ChildAdded:Connect(function(child)
				  wait()
				  child:Destroy()
				  end)
				  end)
			
				  game.Players.LocalPlayer.Character.BodyEffects.Movement.ChildAdded:Connect(function(child)
				  wait()
				  child:Destroy()
				  end)
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

local QTab = Window:MakeTab({
	Name = "ESP",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]
QTab:AddButton({
	Name = "ESP GUI",
	Callback = function()
		local playerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")

		-- check if the ScreenGui already exists, if it does, destroy it and remove BillboardGuis
		if playerGui:FindFirstChild("TadachiisESP") then
			playerGui:FindFirstChild("TadachiisESP"):Destroy()
		
			for _, player in ipairs(game.Players:GetPlayers()) do
				local billboardGui = player.Character and player.Character:FindFirstChild("Head") and player.Character.Head:FindFirstChild("PlayerBillboardGui")
				if billboardGui then
					billboardGui:Destroy()
				end
			end
		end
		
		-- create ScreenGui
		local screenGui = Instance.new("ScreenGui")
		screenGui.Name = "Trapped V2"
		screenGui.Parent = playerGui
		screenGui.DisplayOrder = 1
		
		-- create Frame
		local holder = Instance.new("Frame")
		holder.Name = "Holder"
		holder.Parent = screenGui
		holder.Size = UDim2.new(0, 200, 0, 100) -- size of the frame
		holder.Position = UDim2.new(0.5, -100, 0.5, -50) -- position of the frame at the center of the screen
		holder.BackgroundColor3 = Color3.new(1, 1, 1) -- white background
		holder.BackgroundTransparency = 0.5 -- semi-transparent
		holder.Draggable = true -- makes the frame draggable
		holder.Active = true
		
		-- create TextLabel
		local titleLabel = Instance.new("TextLabel")
		titleLabel.Name = "TitleLabel"
		titleLabel.Text = "TRAPPED ESP GUI"
		titleLabel.TextScaled = true
		titleLabel.Parent = holder
		titleLabel.Size = UDim2.new(1, 0, 0.5, 0) -- fills half of the frame
		titleLabel.BackgroundColor3 = Color3.new(1, 1, 1) -- white background
		titleLabel.TextColor3 = Color3.new(0, 0, 0) -- black text
		titleLabel.BackgroundTransparency = 0.5 -- semi-transparent
		
		-- create TextLabel for Status
		local statusLabel = Instance.new("TextLabel")
		statusLabel.Name = "StatusLabel"
		statusLabel.Text = ""
		statusLabel.Parent = holder
		statusLabel.Size = UDim2.new(1, 0, 0.25, 0) -- fills one-fourth of the frame below the TitleLabel
		statusLabel.Position = UDim2.new(0, 0, 0.5, 0) -- aligns the text label to the bottom of the frame
		statusLabel.BackgroundColor3 = Color3.new(1, 1, 1) -- white background
		statusLabel.TextColor3 = Color3.new(0, 0, 0) -- black text
		statusLabel.BackgroundTransparency = 0.5 -- semi-transparent
		statusLabel.TextScaled = true -- enable text scaling for the status label
		
		-- create TextButton for Status
		local statusButton = Instance.new("TextButton")
		statusButton.Name = "StatusButton"
		statusButton.Text = "Off"
		statusButton.Parent = holder
		statusButton.Size = UDim2.new(1, 0, 0.25, 0) -- fills one-fourth of the frame below the StatusLabel
		statusButton.Position = UDim2.new(0, 0, 0.75, 0) -- aligns the button to the bottom of the frame
		statusButton.BackgroundColor3 = Color3.new(1, 1, 1) -- white background
		statusButton.TextColor3 = Color3.new(0, 0, 0) -- black text
		statusButton.BackgroundTransparency = 0.5 -- semi-transparent
		statusButton.TextScaled = true -- enable text scaling for the button
		
		-- Function to create BillboardGui for a player with name and distance
		local function createBillboardGuiForPlayer(player, distance)
			local billboardGui = Instance.new("BillboardGui")
			billboardGui.Name = "PlayerBillboardGui"
			billboardGui.Adornee = player.Character.Head
			billboardGui.Size = UDim2.new(0, 100, 0, 50) -- fixed size for the BillboardGui
			billboardGui.StudsOffset = Vector3.new(0, 2, 0) -- adjust the vertical offset as needed
			billboardGui.AlwaysOnTop = true
			billboardGui.LightInfluence = 1
			billboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
			billboardGui.Parent = player.Character.Head
		
			local textLabel = Instance.new("TextLabel")
			textLabel.Name = "PlayerNameLabel"
			textLabel.Text = player.Name .. "\nDistance: " .. math.floor(distance)
			textLabel.Size = UDim2.new(1, 0, 1, 0)
			textLabel.BackgroundTransparency = 1 -- transparent background
			textLabel.TextColor3 = Color3.new(1, 0, 0) -- red text for the player's name
			textLabel.TextScaled = true
			textLabel.TextStrokeColor3 = Color3.new(0, 0, 0) -- black text stroke
			textLabel.TextStrokeTransparency = 0 -- fully opaque text stroke (visible through walls)
			textLabel.Visible = statusButton.Text == "On" -- Hide the text if StatusButton is "Off"
			textLabel.Parent = billboardGui
		end
		
		-- Function to update player ESP distance
		local function updatePlayerESP()
			local localCharacter = game.Players.LocalPlayer.Character
			if not localCharacter then
				return
			end
		
			for _, player in ipairs(game.Players:GetPlayers()) do
				if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
					local distance = (localCharacter.Head.Position - player.Character.Head.Position).Magnitude
					local billboardGui = player.Character.Head:FindFirstChild("PlayerBillboardGui")
					if billboardGui then
						billboardGui.PlayerNameLabel.Text = player.Name .. "\nDistance: " .. math.floor(distance)
						billboardGui.PlayerNameLabel.TextColor3 = Color3.new(1, 0, 0) -- Set the text color to red
						billboardGui.PlayerNameLabel.Visible = statusButton.Text == "On" -- Update visibility based on StatusButton
					else
						createBillboardGuiForPlayer(player, distance)
					end
				end
			end
		end
		
		-- Call updatePlayerESP() initially and then schedule it to be called every 0.01 seconds
		updatePlayerESP()
		game:GetService("RunService").Heartbeat:Connect(function()
			updatePlayerESP()
		end)
		
		-- Now, you can add functionality to the button, for example:
		local function onButtonClicked()
			if statusButton.Text == "Off" then
				statusButton.Text = "On"
				-- Add code to enable the player ESP here
			else
				statusButton.Text = "Off"
				-- Add code to disable the player ESP here
				
				-- Remove BillboardGui for each player's head when disabling the ESP
				for _, player in ipairs(game.Players:GetPlayers()) do
					local billboardGui = player.Character and player.Character:FindFirstChild("Head") and player.Character.Head:FindFirstChild("PlayerBillboardGui")
					if billboardGui then
						billboardGui:Destroy()
					end
				end
			end
			-- Update the visibility of BillboardGui elements after clicking the button
			for _, player in ipairs(game.Players:GetPlayers()) do
				local billboardGui = player.Character and player.Character:FindFirstChild("Head") and player.Character.Head:FindFirstChild("PlayerBillboardGui")
				if billboardGui then
					billboardGui.PlayerNameLabel.Visible = statusButton.Text == "On"
				end
			end
		end
		
		statusButton.MouseButton1Click:Connect(onButtonClicked)
  	end    
})



QTab:AddButton({
	Name = "Box",
	Callback = function()
		local plr = game.Players.LocalPlayer
		local camera = game.Workspace.CurrentCamera
		
		for i, v in pairs(game.Players:GetChildren()) do
			local Top = Drawing.new("Line")
			Top.Visible = false
			Top.From = Vector2.new(0, 0)
			Top.To = Vector2.new(200, 200)
			Top.Color = Color3.fromRGB(255, 0, 0)
			Top.Thickness = 2
			Top.Transparency = 1
		
			local Bottom = Drawing.new("Line")
			Bottom.Visible = false
			Bottom.From = Vector2.new(0, 0)
			Bottom.To = Vector2.new(200, 200)
			Bottom.Color = Color3.fromRGB(255, 0, 0)
			Bottom.Thickness = 2
			Bottom.Transparency = 1
		
			local Left = Drawing.new("Line")
			Left.Visible = false
			Left.From = Vector2.new(0, 0)
			Left.To = Vector2.new(200, 200)
			Left.Color = Color3.fromRGB(255, 0, 0)
			Left.Thickness = 2
			Left.Transparency = 1
		
			local Right = Drawing.new("Line")
			Right.Visible = false
			Right.From = Vector2.new(0, 0)
			Right.To = Vector2.new(200, 200)
			Right.Color = Color3.fromRGB(255, 0, 0)
			Right.Thickness = 2
			Right.Transparency = 1
		
			function ESP()
				local connection
				connection = game:GetService("RunService").RenderStepped:Connect(function()
					if v.Character ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v.Name ~= plr.Name  and v.Character.Humanoid.Health > 0 then 
						local ScreenPos, OnScreen = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
						if OnScreen then
							local Scale = v.Character.Head.Size.Y/2
							local Size = Vector3.new(2, 3, 0) * (Scale * 2)
							local humpos = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
							local TL = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, 0)).p)
							local TR = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, 0)).p)
							local BL = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, 0)).p)
							local BR = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, 0)).p)
		
							Top.From = Vector2.new(TL.X, TL.Y)
							Top.To = Vector2.new(TR.X, TR.Y)
		
							Left.From = Vector2.new(TL.X, TL.Y)
							Left.To = Vector2.new(BL.X, BL.Y)
		
							Right.From = Vector2.new(TR.X, TR.Y)
							Right.To = Vector2.new(BR.X, BR.Y)
		
							Bottom.From = Vector2.new(BL.X, BL.Y)
							Bottom.To = Vector2.new(BR.X, BR.Y)
		
							if v.TeamColor == plr.TeamColor then
								Top.Color = Color3.fromRGB(0, 255, 0)
								Left.Color = Color3.fromRGB(0, 255, 0)
								Bottom.Color = Color3.fromRGB(0, 255, 0)
								Right.Color = Color3.fromRGB(0, 255, 0)
							else 
								Top.Color = Color3.fromRGB(255, 0, 0)
								Left.Color = Color3.fromRGB(255, 0, 0)
								Bottom.Color = Color3.fromRGB(255, 0, 0)
								Right.Color = Color3.fromRGB(255, 0, 0)
							end
		
							Top.Visible = true
							Left.Visible = true
							Bottom.Visible = true
							Right.Visible = true
						else 
							Top.Visible = false
							Left.Visible = false
							Bottom.Visible = false
							Right.Visible = false
						end
					else 
						Top.Visible = false
						Left.Visible = false
						Bottom.Visible = false
						Right.Visible = false
						if game.Players:FindFirstChild(v.Name) == nil then
							connection:Disconnect()
						end
					end
				end)
			end
			coroutine.wrap(ESP)()
		end
		
		game.Players.PlayerAdded:Connect(function(newplr) --Parameter gets the new player that has been added
			local Top = Drawing.new("Line")
			Top.Visible = false
			Top.From = Vector2.new(0, 0)
			Top.To = Vector2.new(200, 200)
			Top.Color = Color3.fromRGB(255, 0, 0)
			Top.Thickness = 2
			Top.Transparency = 1
		
			local Bottom = Drawing.new("Line")
			Bottom.Visible = false
			Bottom.From = Vector2.new(0, 0)
			Bottom.To = Vector2.new(200, 200)
			Bottom.Color = Color3.fromRGB(255, 0, 0)
			Bottom.Thickness = 2
			Bottom.Transparency = 1
		
			local Left = Drawing.new("Line")
			Left.Visible = false
			Left.From = Vector2.new(0, 0)
			Left.To = Vector2.new(200, 200)
			Left.Color = Color3.fromRGB(255, 0, 0)
			Left.Thickness = 2
			Left.Transparency = 1
		
			local Right = Drawing.new("Line")
			Right.Visible = false
			Right.From = Vector2.new(0, 0)
			Right.To = Vector2.new(200, 200)
			Right.Color = Color3.fromRGB(255, 0, 0)
			Right.Thickness = 2
			Right.Transparency = 1
		
			function ESP()
				local connection
				connection = game:GetService("RunService").RenderStepped:Connect(function()
					if newplr.Character ~= nil and newplr.Character:FindFirstChild("HumanoidRootPart") ~= nil and newplr.Name ~= plr.Name  and newplr.Character.Humanoid.Health > 0 then
						local ScreenPos, OnScreen = camera:WorldToViewportPoint(newplr.Character.HumanoidRootPart.Position)
						if OnScreen then
							local Scale = newplr.Character.Head.Size.Y/2
							local Size = Vector3.new(2, 3, 0) * (Scale * 2)
							local humpos = camera:WorldToViewportPoint(newplr.Character.HumanoidRootPart.Position)
							local TL = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, 0)).p)
							local TR = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, 0)).p)
							local BL = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, 0)).p)
							local BR = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, 0)).p)
		
							Top.From = Vector2.new(TL.X, TL.Y)
							Top.To = Vector2.new(TR.X, TR.Y)
		
							Left.From = Vector2.new(TL.X, TL.Y)
							Left.To = Vector2.new(BL.X, BL.Y)
		
							Right.From = Vector2.new(TR.X, TR.Y)
							Right.To = Vector2.new(BR.X, BR.Y)
		
							Bottom.From = Vector2.new(BL.X, BL.Y)
							Bottom.To = Vector2.new(BR.X, BR.Y)
		
							if newplr.TeamColor == plr.TeamColor then
								Top.Color = Color3.fromRGB(0, 255, 0)
								Left.Color = Color3.fromRGB(0, 255, 0)
								Bottom.Color = Color3.fromRGB(0, 255, 0)
								Right.Color = Color3.fromRGB(0, 255, 0)
							else 
								Top.Color = Color3.fromRGB(255, 0, 0)
								Left.Color = Color3.fromRGB(255, 0, 0)
								Bottom.Color = Color3.fromRGB(255, 0, 0)
								Right.Color = Color3.fromRGB(255, 0, 0)
							end
		
							Top.Visible = true
							Left.Visible = true
							Bottom.Visible = true
							Right.Visible = true
						else 
							Top.Visible = false
							Left.Visible = false
							Bottom.Visible = false
							Right.Visible = false
						end
					else 
						Top.Visible = false
						Left.Visible = false
						Bottom.Visible = false
						Right.Visible = false
						if game.Players:FindFirstChild(newplr.Name) == nil then
							connection:Disconnect()
						end
					end
				end)
			end
			coroutine.wrap(ESP)()
		end)
  	end    
})

XTab:AddButton({
	Name = "Rainbow Character",
	Callback = function()
		for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
			if v:IsA("MeshPart") then
				v.Material = "ForceField"
				spawn(function()
					while wait() do
						for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
							if v:IsA("MeshPart") then
								v.Color = Color3.fromHSV(tick()%5/5,1,1)
								wait()
							end
						end 
					end
				end)
			end
		end
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]




XTab:AddButton({
	Name = "Click to Tp (tool)",
	Callback = function()
		mouse = game.Players.LocalPlayer:GetMouse()
		tool = Instance.new("Tool")
		tool.RequiresHandle = false
		tool.Name = "teleport"
		tool.Activated:connect(function()
		local pos = mouse.Hit+Vector3.new(0,2.5,0)
		pos = CFrame.new(pos.X,pos.Y,pos.Z)
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
		end)
		tool.Parent = game.Players.LocalPlayer.Backpack
  	end    
})


QTab:AddButton({
	Name = "ESP TRACERS",
	Callback = function()
		local lplr = game.Players.LocalPlayer
		local camera = game:GetService("Workspace").CurrentCamera
		local CurrentCamera = workspace.CurrentCamera
		local worldToViewportPoint = CurrentCamera.worldToViewportPoint
		
		_G.TeamCheck = false -- Use True or False to toggle TeamCheck
		
		for i,v in pairs(game.Players:GetChildren()) do
			local Tracer = Drawing.new("Line")
			Tracer.Visible = false
			Tracer.Color = Color3.new(1,1,1)
			Tracer.Thickness = 1
			Tracer.Transparency = 1
		
			function lineesp()
				game:GetService("RunService").RenderStepped:Connect(function()
					if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then
						local Vector, OnScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
		
						if OnScreen then
							Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
							Tracer.To = Vector2.new(Vector.X, Vector.Y)
		
							if _G.TeamCheck and v.TeamColor == lplr.TeamColor then
								--//Teammates
								Tracer.Visible = false
							else
								--//Enemies
								Tracer.Visible = true
							end
						else
							Tracer.Visible = false
						end
					else
						Tracer.Visible = false
					end
				end)
			end
			coroutine.wrap(lineesp)()
		end
		
		game.Players.PlayerAdded:Connect(function(v)
			local Tracer = Drawing.new("Line")
			Tracer.Visible = false
			Tracer.Color = Color3.new(1,1,1)
			Tracer.Thickness = 1
			Tracer.Transparency = 1
		
			function lineesp()
				game:GetService("RunService").RenderStepped:Connect(function()
					if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then
						local Vector, OnScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
		
						if OnScreen then
							Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
							Tracer.To = Vector2.new(Vector.X, Vector.Y)
		
							if _G.TeamCheck and v.TeamColor == lplr.TeamColor then
								--//Teammates
								Tracer.Visible = false
							else
								--//Enemies
								Tracer.Visible = true
							end
						else
							Tracer.Visible = false
						end
					else
						Tracer.Visible = false
					end
				end)
			end
			coroutine.wrap(lineesp)()
		end)
  	end    
})

Tab:AddButton({
	Name = "Trigger Bot",
	Callback = function()
		for _,v in pairs(game.CoreGui:GetChildren()) do
			if v.Name=="TrigBot" then
				v:Destroy()
			end
		end
		triggerbot=false
		player=false
		ignoreteams=false
		function sandbox(var,func)
			local env = getfenv(func)
			local newenv = setmetatable({},{
				__index = function(self,k)
					if k=="script" then
						return var
					else
						return env[k]
					end
				end,
			})
			setfenv(func,newenv)
			return func
		end
		cors = {}
		mas = Instance.new("Model",game:GetService("Lighting"))
		ScreenGui0 = Instance.new("ScreenGui")
		Frame1 = Instance.new("Frame")
		Frame2 = Instance.new("Frame")
		TextLabel3 = Instance.new("TextLabel")
		TextLabel4 = Instance.new("TextLabel")
		LocalScript5 = Instance.new("LocalScript")
		TextButton6 = Instance.new("TextButton")
		LocalScript7 = Instance.new("LocalScript")
		TextButton8 = Instance.new("TextButton")
		LocalScript9 = Instance.new("LocalScript")
		ScreenGui0.Name = "TrigBot"
		ScreenGui0.Parent = mas
		Frame1.Parent = ScreenGui0
		Frame1.Position = UDim2.new(0.08906883, 0, 0.0923379064, 0)
		Frame1.Size = UDim2.new(0.0978964418, 0, 0.0117878197, 0)
		Frame1.BackgroundColor = BrickColor.new("Pastel light blue")
		Frame1.BackgroundColor3 = Color3.new(0.615686, 0.913726, 1)
		Frame1.BackgroundTransparency = 0.10000000149012
		Frame1.BorderSizePixel = 0
		Frame2.Parent = Frame1
		Frame2.Position = UDim2.new(0, 0, 1.31499231, 0)
		Frame2.Size = UDim2.new(1, 0, 14.833333, 0)
		Frame2.BackgroundColor = BrickColor.new("Fire Yellow")
		Frame2.BackgroundColor3 = Color3.new(1, 0.976471, 0.215686)
		Frame2.BackgroundTransparency = 0.5
		Frame2.BorderSizePixel = 0
		Frame2.ZIndex = -100
		TextLabel3.Name = "TriggerLabel"
		TextLabel3.Parent = Frame1
		TextLabel3.Position = UDim2.new(0, 0, 1.3149929, 0)
		TextLabel3.Size = UDim2.new(1, 0, 2.5, 0)
		TextLabel3.BackgroundColor = BrickColor.new("Institutional white")
		TextLabel3.BackgroundColor3 = Color3.new(1, 1, 1)
		TextLabel3.BackgroundTransparency = 1
		TextLabel3.BorderSizePixel = 0
		TextLabel3.FontSize = Enum.FontSize.Size14
		TextLabel3.Text = "TriggerBot"
		TextLabel3.TextColor = BrickColor.new("Institutional white")
		TextLabel3.TextColor3 = Color3.new(1, 1, 1)
		TextLabel3.TextScaled = true
		TextLabel3.TextSize = 14
		TextLabel3.TextStrokeColor3 = Color3.new(0.12549, 0.239216, 0.207843)
		TextLabel3.TextStrokeTransparency = 0
		TextLabel3.TextWrap = true
		TextLabel3.TextWrapped = true
		TextLabel4.Name = "ignorelabel"
		TextLabel4.Parent = Frame1
		TextLabel4.Position = UDim2.new(0, 0, 7.8149929, 0)
		TextLabel4.Size = UDim2.new(1, 0, 3.66666675, 0)
		TextLabel4.BackgroundColor = BrickColor.new("Institutional white")
		TextLabel4.BackgroundColor3 = Color3.new(1, 1, 1)
		TextLabel4.BackgroundTransparency = 1
		TextLabel4.BorderSizePixel = 0
		TextLabel4.FontSize = Enum.FontSize.Size14
		TextLabel4.Text = "Ignore Team"
		TextLabel4.TextColor = BrickColor.new("Institutional white")
		TextLabel4.TextColor3 = Color3.new(1, 1, 1)
		TextLabel4.TextScaled = true
		TextLabel4.TextSize = 14
		TextLabel4.TextStrokeColor3 = Color3.new(0.12549, 0.239216, 0.207843)
		TextLabel4.TextStrokeTransparency = 0
		TextLabel4.TextWrap = true
		TextLabel4.TextWrapped = true
		LocalScript5.Parent = Frame1
		table.insert(cors,sandbox(LocalScript5,function()
		script.Parent.Active=true
		script.Parent.Selectable=true
		script.Parent.Draggable=true
		end))
		TextButton6.Name = "triggerbot"
		TextButton6.Parent = Frame1
		TextButton6.Position = UDim2.new(0, 0, 3.83333397, 0)
		TextButton6.Size = UDim2.new(1, 0, 4, 0)
		TextButton6.BackgroundColor = BrickColor.new("Institutional white")
		TextButton6.BackgroundColor3 = Color3.new(1, 1, 1)
		TextButton6.BackgroundTransparency = 1
		TextButton6.Font = Enum.Font.Fantasy
		TextButton6.FontSize = Enum.FontSize.Size14
		TextButton6.Text = "_"
		TextButton6.TextColor = BrickColor.new("Institutional white")
		TextButton6.TextColor3 = Color3.new(1, 1, 1)
		TextButton6.TextScaled = true
		TextButton6.TextSize = 14
		TextButton6.TextStrokeTransparency = 0
		TextButton6.TextWrap = true
		TextButton6.TextWrapped = true
		LocalScript7.Parent = TextButton6
		table.insert(cors,sandbox(LocalScript7,function()
		script.Parent.MouseButton1Click:Connect(function()
			triggerbot=not triggerbot
			if triggerbot==true then
				script.Parent.Text="X"
				repeat wait()
				mouse=game.Players.LocalPlayer:GetMouse()
					if mouse.Target~=nil then
						if mouse.Target.Parent:FindFirstChild("Humanoid") and mouse.Target.Parent:FindFirstChild("Humanoid").Health>0 then
							if ignoreteams==false then
								Input.LeftClick()
								print("Check one")
							elseif ignoreteams==true then
								for _,v in pairs(game.Players:GetPlayers()) do
									if v.Name==mouse.Target.Parent.Name then
										player=true
									end
								end
								if player==true then
									player=false
									if game.Players:GetPlayerFromCharacter(mouse.Target.Parent).Team~=game.Players.LocalPlayer.Team then
										Input.LeftClick()
										print("Check three")
									end
								else
									Input.LeftClick()
									print("Check two")
								end
							end
						end
				end
					until triggerbot==false
				elseif triggerbot==false then
					script.Parent.Text=""
			end
		end)
		end))
		TextButton8.Name = "ignoreteam"
		TextButton8.Parent = Frame1
		TextButton8.Position = UDim2.new(0, 0, 11.4816589, 0)
		TextButton8.Size = UDim2.new(1, 0, 4.5, 0)
		TextButton8.BackgroundColor = BrickColor.new("Institutional white")
		TextButton8.BackgroundColor3 = Color3.new(1, 1, 1)
		TextButton8.BackgroundTransparency = 1
		TextButton8.Font = Enum.Font.Fantasy
		TextButton8.FontSize = Enum.FontSize.Size14
		TextButton8.Text = "_"
		TextButton8.TextColor = BrickColor.new("Institutional white")
		TextButton8.TextColor3 = Color3.new(1, 1, 1)
		TextButton8.TextScaled = true
		TextButton8.TextSize = 14
		TextButton8.TextStrokeTransparency = 0
		TextButton8.TextWrap = true
		TextButton8.TextWrapped = true
		TextButton8.MouseButton1Click:Connect(function()
			ignoreteams=not ignoreteams
			if ignoreteams==true then
				TextButton8.Text="X"
			elseif ignoreteams==false then
				TextButton8.Text=""
			end
		end)
		LocalScript9.Parent = TextButton8
		table.insert(cors,sandbox(LocalScript9,function()
		
		end))
		for i,v in pairs(mas:GetChildren()) do
			v.Parent = game.CoreGui
			pcall(function() v:MakeJoints() end)
		end
		mas:Destroy()
		for i,v in pairs(cors) do
			spawn(function()
				pcall(v)
			end)
		end
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

local FTab = Window:MakeTab({
	Name = "FPS BOOSTER",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

FTab:AddButton({
	Name = "FPS BOOSTER",
	Callback = function()
		_G.Ignore = {}
		_G.Settings = {
			Players = {
				["Ignore Me"] = true,
				["Ignore Others"] = true,
				["Ignore Tools"] = true
			},
			Meshes = {
				NoMesh = false,
				NoTexture = false,
				Destroy = false
			},
			Images = {
				Invisible = true,
				Destroy = false
			},
			Explosions = {
				Smaller = true,
				Invisible = false, -- Not for PVP games
				Destroy = false -- Not for PVP games
			},
			Particles = {
				Invisible = true,
				Destroy = false
			},
			TextLabels = {
				LowerQuality = true,
				Invisible = false,
				Destroy = false
			},
			MeshParts = {
				LowerQuality = true,
				Invisible = false,
				NoTexture = false,
				NoMesh = false,
				Destroy = false
			},
			Other = {
				["FPS Cap"] = 360, -- true to uncap
				["No Camera Effects"] = true,
				["No Clothes"] = true,
				["Low Water Graphics"] = true,
				["No Shadows"] = true,
				["Low Rendering"] = true,
				["Low Quality Parts"] = true,
				["Low Quality Models"] = true,
				["Reset Materials"] = true,
			}
		}
		loadstring(game:HttpGet("https://raw.githubusercontent.com/ynwbortlen/DSS/main/3"))()
  	end    
})



OrionLib:Init()
